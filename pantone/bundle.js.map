{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/colorStore.js","../src/util.js","../src/HSB.svelte","../src/HSL.svelte","../src/RGB.svelte","../src/Result.svelte","../src/Colorpicker.svelte","../src/pantone-colors.js","../src/Pantone.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (!stop) {\n                return; // not ready\n            }\n            subscribers.forEach((s) => s[1]());\n            subscribers.forEach((s) => s[0](value));\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    const invalidators = [];\n    const store = readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            run_all(invalidators);\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n    return {\n        subscribe(run, invalidate = noop) {\n            invalidators.push(invalidate);\n            const unsubscribe = store.subscribe(run, invalidate);\n            return () => {\n                const index = invalidators.indexOf(invalidate);\n                if (index !== -1) {\n                    invalidators.splice(index, 1);\n                }\n                unsubscribe();\n            };\n        }\n    };\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from 'svelte/store'\n\nexport let hsbStore = {\n\th: writable(271),\n\ts: writable(60),\n\tb: writable(50)\n}\n\nlet {h, s, b} = hsbStore\n\nexport let hslStore = {\n\th: derived([h, s, b], ([$h, $s, $b]) => hsbToHSL($h, $s, $b).h),\n\ts: derived([h, s, b], ([$h, $s, $b]) => hsbToHSL($h, $s, $b).s),\n\tl: derived([h, s, b], ([$h, $s, $b]) => hsbToHSL($h, $s, $b).l)\n}\n\nfunction clamp(num, min, max) {\n\treturn num <= min ? min : num >= max ? max : num;\n}\n\nfunction toTwoDecimals(num) {\n\treturn Math.round(num * 100) / 100\n}\n\t\nfunction hsbToHSL(hue, sat, bright) {\n\tsat = clamp(sat, 0, 100) / 100\n\tbright = clamp(bright, 0, 100) / 100\n\n\tlet light = .5 * bright * (2 - sat) || 0;\n\tlet hslSat = bright * sat / (1 - Math.abs(2 * light - 1)) || 0\n\n\treturn {h: hue,\n\t\t\t\t\ts: toTwoDecimals(hslSat*100),\n\t\t\t\t\tl: toTwoDecimals(light*100)}\n}\n\nexport let rgbStore = {\n\tr: derived([h, s, b], ([$h, $s, $l]) => hslToRGB(hsbToHSL($h,$s,$l)).r),\n\tg: derived([h, s, b], ([$h, $s, $l]) => hslToRGB(hsbToHSL($h,$s,$l)).g),\n\tb: derived([h, s, b], ([$h, $s, $l]) => hslToRGB(hsbToHSL($h,$s,$l)).b)\n}\n\nfunction hslToRGB({h, s, l}) {\n\ts = clamp(s, 0, 100) / 100\n\tl = clamp(l, 0, 100) / 100\n\th = h % 360\n\n\tlet c = (1 - Math.abs(2 * l - 1)) * s,\n\t\t\tx = c * (1 - Math.abs((h / 60) % 2 - 1)),\n\t\t\tm = l - c/2,\n\t\t\tr = 0,\n\t\t\tg = 0,\n\t\t\tb = 0\n\n\tif (0 <= h && h < 60) {\n\t\tr = c; g = x; b = 0\n\t} else if (60 <= h && h < 120) {\n\t\tr = x; g = c; b = 0\n\t} else if (120 <= h && h < 180) {\n\t\tr = 0; g = c; b = x\n\t} else if (180 <= h && h < 240) {\n\t\tr = 0; g = x; b = c\n\t} else if (240 <= h && h < 300) {\n\t\tr = x; g = 0; b = c\n\t} else if (300 <= h && h < 360) {\n\t\tr = c; g = 0; b = x\n\t}\n\tr = Math.round((r + m) * 255)\n\tg = Math.round((g + m) * 255)\n\tb = Math.round((b + m) * 255)\n\n\treturn {r, g, b}\n}\n","export let toTwoDecimals = (num) => {\n\treturn Math.round(num * 100) / 100\n}\n\nexport let clamp = (num, min, max) => {\n\treturn num <= min ? min : num >= max ? max : num\n}","<script>\n  import { hsbStore } from './colorStore.js'\n\t\n\tlet hue, saturation, brightness\n\thsbStore.h.subscribe(val => hue = val)\n\thsbStore.s.subscribe(val => saturation = val)\n\thsbStore.b.subscribe(val => brightness = val)\n\t\n\tfunction updateHSB() {\n\t\thsbStore.h.set(hue)\n\t\thsbStore.s.set(saturation)\n\t\thsbStore.b.set(brightness)\n\t}\n</script>\n\n\n<h3>HSB</h3>\n<section>\n\t<label>H:<input type=number min=0 max=360 bind:value={hue} on:input={updateHSB}><span class=\"mobile-hide\"> deg</span></label>\n\t<label>S: <input type=number min=0 max=100 bind:value={saturation} on:input={updateHSB}><span class=\"mobile-hide\"> %</span></label>\n\t<label>B: <input type=number min=0 max=100 bind:value={brightness} on:input={updateHSB}><span class=\"mobile-hide\"> %</span></label>\t\n</section>\n\n<style>\n\th3 {\n\t\tborder-bottom: solid 1px;\n\t\tmargin: 0 10% .5em 10%;\n\t}\n\t\n\tsection {\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t}\n\t\n\tlabel {\n\t\tfont-weight: bold;\n\t\tmargin: 0 1em;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t\n\tinput {\n\t\tbackground: hsl(var(--hue), var(--saturation), var(--brightness));\n\t\tcolor: var(--contrast);\n\t\tborder: solid var(--contrast) 1px;\n\t\ttext-align: center;\n\t\twidth: 7ch;\n\t\tpadding: 0;\n\t\tmargin: 0 .4em;\n\t\ttext-align: center;\n\t\ttransition: all .13s ease-in-out;\n\t}\n\t\n\t@media(max-width: 600px) {\n\t\t.mobile-hide {\n\t\t\tposition: absolute;\n\t\t\twidth: 1px;\n\t\t\topacity: 0;\n\t\t}\n\t\t\n\t\tlabel {\n\t\t\tmargin: 0 1vmin;\n\t\t}\n\t\t\n\t\tsection {\n\t\t\tjustify-content: center;\n\t\t}\n\t\t\n\t\tinput {\n\t\t\twidth: 10ch;\n\t\t}\n\t}\n</style>\n","<script>\n  import { hsbStore, hslStore } from './colorStore.js'\n\t\n\tlet hue, saturation, lightness\n\thslStore.h.subscribe(val => hue = val)\n\thslStore.s.subscribe(val => saturation = val)\n\thslStore.l.subscribe(val => lightness = val)\n\t\n\tfunction clamp(num, min, max) {\n\t\treturn num <= min ? min : num >= max ? max : num;\n\t}\n\t\n\tfunction toTwoDecimals(num) {\n\t\treturn Math.round(num * 100) / 100\n\t}\n\t\n\tfunction hslToHSB({hue: h, saturation: s, lightness: l}) {\n\t\th = parseFloat(h)\n\t\ts = clamp(s, 0, 100) / 100\n\t\tl = clamp(l, 0, 100) / 100\n\t\t\n\t\tlet bright = (2*l + s*(1 - Math.abs(2*l - 1))) / 2\n\t\tlet hsbSat = (bright !== 0) ? 2 * (bright - l) / bright : 0\n\t\t \n\t\treturn {\n\t\t\th,\n\t\t\ts: toTwoDecimals(hsbSat * 100),\n\t\t\tb: toTwoDecimals(bright * 100)\n\t\t}\n\t}\n\t\n\tfunction updateHSB() {\n\t\tlet newHSB = hslToHSB({hue, saturation, lightness})\n\t\thsbStore.h.set(newHSB.h)\n\t\thsbStore.s.set(newHSB.s)\n\t\thsbStore.b.set(newHSB.b)\n\t}\n</script>\n\n<h3>HSL</h3>\n<section>\n\t<label>H: <input type=number min=0 max=360 bind:value={hue} on:input={updateHSB}><span class=\"mobile-hide\"> deg</span></label>\n\t<label>S: <input type=number min=0 max=100 bind:value={saturation} on:input={updateHSB}><span class=\"mobile-hide\"> %</span></label>\n\t<label>L: <input type=number min=0 max=100 bind:value={lightness} on:input={updateHSB}><span class=\"mobile-hide\"> %</span></label>\t\n</section>\n\n<style>\n\th3 {\n\t\tborder-bottom: solid 1px;\n\t\tmargin: 0 10% .5em 10%;\n\t}\n\t\n\tsection {\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t}\n\t\n\tlabel {\n\t\tfont-weight: bold;\n\t\tmargin: 0 1em;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t\n\tinput {\n\t\tbackground: hsl(var(--hue), var(--saturation), var(--brightness));\n\t\tcolor: var(--contrast);\n\t\tborder: solid var(--contrast) 1px;\n\t\ttext-align: center;\n\t\twidth: 7ch;\n\t\tpadding: 0;\n\t\tmargin: 0 .4em;\n\t\ttext-align: center;\n\t\ttransition: all .13s ease-in-out;\n\t}\n\t\n\t@media(max-width: 600px) {\n\t\t.mobile-hide {\n\t\t\tposition: absolute;\n\t\t\twidth: 1px;\n\t\t\topacity: 0;\n\t\t}\n\t\t\n\t\tlabel {\n\t\t\tmargin: 0 1vmin;\n\t\t}\n\t\t\n\t\tsection {\n\t\t\tjustify-content: center;\n\t\t}\n\t\t\n\t\tinput {\n\t\t\twidth: 10ch;\n\t\t}\n\t}\n</style>","<script>\n  import { hsbStore, rgbStore } from './colorStore.js'\n\t\n\tlet red, green, blue\n\trgbStore.r.subscribe(val => red = val)\n\trgbStore.g.subscribe(val => green = val)\n\trgbStore.b.subscribe(val => blue = val)\n\t\n\tfunction clamp(num, min, max) {\n\t\treturn num <= min ? min : num >= max ? max : num;\n\t}\n\t\n\tfunction toTwoDecimals(num) {\n\t\treturn Math.round(num * 100) / 100\n\t}\n\t \n\tfunction rgbToHSL({red: r, green: g, blue: b}) {\n\t\tr = clamp(r, 0, 255) / 255;\n\t\tg = clamp(g, 0, 255) / 255;\n\t\tb = clamp(b, 0, 255) / 255;\n\n\t\tlet cmin = Math.min(r,g,b),\n\t\t\t\tcmax = Math.max(r,g,b),\n\t\t\t\tdelta = cmax - cmin,\n\t\t\t\th = 0,\n\t\t\t\ts = 0,\n\t\t\t\tl = 0;\n\t\t\n\t\tif (delta == 0)\n\t\t\th = 0;\n\t\telse if (cmax == r)\n\t\t\th = ((g - b) / delta) % 6;\n\t\telse if (cmax == g)\n\t\t\th = (b - r) / delta + 2;\n\t\telse\n\t\t\th = (r - g) / delta + 4;\n\n\t\th = Math.round(h * 60);\n\n\t\tif (h < 0)\n\t\t\t\th += 360;\n\t\t\n\t\tl = (cmax + cmin) / 2;\n\t\ts = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\t\t\n\t\treturn {\n\t\t\th,\n\t\t\ts: toTwoDecimals(s * 100),\n\t\t\tl: toTwoDecimals(l * 100)\n\t\t}\n\t}\n\t\n\tfunction hslToHSB({h, s, l}) {\n\t\th = parseFloat(h)\n\t\ts = clamp(s, 0, 100) / 100\n\t\tl = clamp(l, 0, 100) / 100\n\t\t\n\t\tlet bright = (2*l + s*(1 - Math.abs(2*l - 1))) / 2\n\t\tlet hsbSat = (bright !== 0) ? 2 * (bright - l) / bright : 0\n\t\t \n\t\treturn {\n\t\t\th,\n\t\t\ts: toTwoDecimals(hsbSat * 100),\n\t\t\tb: toTwoDecimals(bright * 100)\n\t\t}\n\t}\n\t\n\tfunction updateHSB() {\n\t\tlet newHSB = hslToHSB(rgbToHSL({red, blue, green}))\n\t\thsbStore.h.set(newHSB.h)\n\t\thsbStore.s.set(newHSB.s)\n\t\thsbStore.b.set(newHSB.b)\n\t}\n</script>\n\n<h3>RGB</h3>\n<section>\n\t<label>R: <input type=number min=0 max=255 bind:value={red} on:input={updateHSB}></label>\n\t<label>G: <input type=number min=0 max=255 bind:value={green} on:input={updateHSB}></label>\n\t<label>B: <input type=number min=0 max=255 bind:value={blue} on:input={updateHSB}></label>\n</section>\n\n<style>\n\th3 {\n\t\tborder-bottom: solid 1px;\n\t\tmargin: 0 10% .5em 10%;\n\t}\n\t\n\tsection {\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-around;\n\t}\n\t\n\tlabel {\n\t\tfont-weight: bold;\n\t\tmargin: 0 1em;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t\n\tinput {\n\t\tbackground: hsl(var(--hue), var(--saturation), var(--brightness));\n\t\tcolor: var(--contrast);\n\t\tborder: solid var(--contrast) 1px;\n\t\ttext-align: center;\n\t\twidth: 7ch;\n\t\tpadding: 0;\n\t\tmargin: 0 .4em;\n\t\ttransition: all .13s ease-in-out;\n\t}\n\t\n\t@media(max-width: 600px) {\n\t\tlabel {\n\t\t\tmargin: 1vmin;\n\t\t}\n\t\t\n\t\tsection {\n\t\t\tjustify-content: center;\n\t\t}\n\t\t\n\t\tinput {\n\t\t\twidth: 10ch;\n\t\t}\n\t}\n</style>","<script>\n\timport HSB from './HSB.svelte'\n\timport HSL from './HSL.svelte'\n\timport RGB from './RGB.svelte'\n\t\n\texport let type = 'hsb'\n</script>\n\n<style>\n\tfieldset {\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t\tpadding: 0;\n\t\tmargin: 1vmin 0;\n\t\tborder: 0;\n\t\tposition: relative;\n\t\theight: fit-content;\n\t\t\n\t\t--h-size-min: .6em;\n\t\t--h-w-min: 15;\n\t\t--h-w-max: 50;\n\t\t--h-w-diff: calc(var(--h-w-max) - var(--h-w-min));\n\t\t--h-size-w-min: calc(var(--h-w-min) * 1em);\n\n\t\tfont-size: calc(var(--h-size-min) + .2 * (100vw - var(--h-size-w-min)) / var(--h-w-diff));\n\t}\n</style>\n \n<fieldset>\n\t{#if type===\"hsb\"}\n\t<HSB />\n\t{:else if type===\"hsl\"}\n\t<HSL />\t\n\t{:else if type===\"rgb\"}\n\t<RGB />\n\t{/if}\n</fieldset>\n\n","<script>\n\timport { hsbStore, hslStore } from './colorStore.js'\n\timport { toTwoDecimals } from './util.js'\n\timport Result from './Result.svelte'\n\t\n\tlet hue, saturation, lightness, hsbSaturation, hsbBrightness\n\thslStore.h.subscribe(val => hue = val)\n\thslStore.s.subscribe(val => saturation = val)\n\thslStore.l.subscribe(val => lightness = val)\n\t\n\thsbStore.s.subscribe(val => hsbSaturation = val)\n\thsbStore.b.subscribe(val => hsbBrightness = val)\n\t\n\tfunction updateSatBright(e) {\n\t\tlet {width, height} = e.target.getBoundingClientRect()\n\t\thsbStore.s.set(toTwoDecimals(e.offsetX / width * 100))\n\t\thsbStore.b.set(toTwoDecimals(100 - e.offsetY / height * 100))\n\t}\n\n\tfunction updateHSB() {\n\t\thsbStore.h.set(hue)\n\t}\n</script>\n\n<div id=\"colorpicker\" \n\t\t style=\"--hue: {hue}deg;\n\t\t\t\t\t\t--saturation: {saturation}%;\n\t\t\t\t\t\t--lightness: {lightness}%;\n\t\t\t\t\t\t--hsb-saturation: {hsbSaturation};\n\t\t\t\t\t\t--hsb-brightness: {hsbBrightness};\n\t\t\t\t\t\t--contrast: {(lightness > 50) ? '#222' : 'white'};\">\n\t<div id=\"result\" >\n\t\t<Result type=\"hsb\" />\n\t\t<Result type=\"hsl\" />\n\t\t<Result type=\"rgb\" />\n\t</div>\n\t<div id=\"sl-picker\" on:click={updateSatBright}>\n\t\t<div id=\"sl-dot\" style=\"--dot-x: {hsbSaturation}%;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t--dot-y: {hsbBrightness}%;\">\n\t\t</div>\n\t</div>\n\t<label id=\"h-picker\">\n\t\t<input type=\"range\" min=0 max=360 bind:value={hue} on:input={updateHSB}>\n\t\t<div id=\"h-dot\" style=\"--dot-x: {hue / 360 * 80 + 10}%;\"></div>\n\t</label>\n</div>\n\n<style>\n\t\n\t#colorpicker {\n\t\twidth: 80vw;\n\t\theight: 50vh;\n\t\tmargin: 5vmin;\n\t\tborder-radius: 1.5vmin;\n\t\tbox-shadow: 0 1vmin 1vmin rgba(0,0,0,0.3),\n\t\t\t\t\t\t\t\t0 1.7vmin 2vmin hsla(var(--hue), var(--saturation), var(--lightness), .3);\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 2fr;\n\t\tgrid-template-rows: 4fr 1fr;\n\t\toverflow: hidden;\n\t\t--contrast: black;\n\t\tcolor: var(--contrast);\n\t}\n\t\n\t#result {\n\t\tgrid-column: 1 / 2;\n\t\tgrid-row: 1 / 3;\n\t\tbackground: hsl(var(--hue), var(--saturation), var(--lightness));\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tbox-sizing: border-box;\n\t\tpadding: 5% 0;\n\t\ttransition: all .13s ease-in-out;\n\t}\n\t\n\t\n\t#sl-picker {\n\t\tgrid-column: 2 / 3;\n\t\tgrid-row: 1 / 2;\n\t\tbackground: linear-gradient(to top, black, transparent), linear-gradient(to right, white, transparent), hsl(var(--hue), 100%, 50%);\n\t\tposition: relative;\n\t}\n\t\n\t#h-dot, #sl-dot {\n\t\tpointer-events: none;\n\t\tposition: absolute;\n\t\twidth: 3vmin;\n\t\theight: 3vmin;\n\t\ttransform: translate(-50%, 50%);\n\t\tborder-radius: 50%;\n\t\tborder: solid var(--contrast);\n\t}\n\t\n\t#sl-dot {\n\t\tbottom: var(--dot-y);\n\t\tleft: var(--dot-x);\n\t\ttransition: all .13s ease-in-out;\n\t}\n\t\n\t#h-dot {\n\t\tbottom: 50%;\n\t\tleft: var(--dot-x);\n\t\tbackground: hsl(var(--hue), 100%, 50%);\n\t\tborder-color: white;\n\t}\n\t\n\t#h-picker {\n\t\tgrid-column: 2 / 3;\n\t\tgrid-row: 2 / 3;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tposition: relative;\n\t}\n\t\n\t#h-picker input {\n\t\topacity: 0;\n\t}\n\t\n\t#h-picker input,\n\t#h-picker::before {\n\t\twidth: 80%;\n\t}\n\t\n\t#h-picker::before {\n\t\tpointer-events: none;\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\theight: 2vh;\n\t\tborder-radius: 1vh;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tbackground: linear-gradient(to right, #f00, #cc0, #0f0, #0cc, #00f, #c0c, #f00);\n\t}\n\t\t\n\t@media(max-width: 650px) {\n\t\t#colorpicker {\n\t\t\theight: 90vh;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t}\n\t\t\n\t\t#result {\n\t\t\tgrid-column: 1 / 2;\n\t\t\tgrid-row: 1 / 2;\n\t\t}\n\t\t\n\t\t#sl-picker {\n\t\t\theight: 100%;\n\t\t\tgrid-column: 1 / 2;\n\t\t}\n\t\t\n\t\t#h-picker {\n\t\t\tgrid-column: 1 / 2;\n\t\t}\n\t}\n</style>","// copied from the wonderful resource by Margaret2 at https://raw.githubusercontent.com/Margaret2/pantone-colors/master/pantone-colors.json\n\nexport default {\n  \"names\": [\n    \"egret\",\n    \"snow-white\",\n    \"bright-white\",\n    \"cloud-dancer\",\n    \"gardenia\",\n    \"marshmallow\",\n    \"blanc-de-blanc\",\n    \"pristine\",\n    \"whisper-white\",\n    \"white-asparagus\",\n    \"birch\",\n    \"turtledove\",\n    \"bone-white\",\n    \"silver-birch\",\n    \"vanilla-ice\",\n    \"papyrus\",\n    \"antique-white\",\n    \"winter-white\",\n    \"cloud-cream\",\n    \"angora\",\n    \"seedpearl\",\n    \"vanilla-custard\",\n    \"almond-oil\",\n    \"alabaster-gleam\",\n    \"vanilla\",\n    \"rutabaga\",\n    \"banana-crepe\",\n    \"italian-straw\",\n    \"whitecap-gray\",\n    \"fog\",\n    \"white-swan\",\n    \"sandshell\",\n    \"tapioca\",\n    \"creme-brulee\",\n    \"parchment\",\n    \"sheer-pink\",\n    \"dew\",\n    \"powder-puff\",\n    \"pearled-ivory\",\n    \"white-smoke\",\n    \"ecru\",\n    \"navajo\",\n    \"almost-mauve\",\n    \"delicacy\",\n    \"petal-pink\",\n    \"bridal-blush\",\n    \"cream-pink\",\n    \"angel-wing\",\n    \"pastel-parchment\",\n    \"star-white\",\n    \"lily-white\",\n    \"vaporous-gray\",\n    \"summer-shower\",\n    \"ice\",\n    \"frost\",\n    \"icicle\",\n    \"bit-of-blue\",\n    \"mystic-blue\",\n    \"bluewash\",\n    \"spa-blue\",\n    \"lightest-sky\",\n    \"hint-of-mint\",\n    \"murmur\",\n    \"barely-blue\",\n    \"blue-blush\",\n    \"zephyr-blue\",\n    \"blue-flower\",\n    \"sprout-green\",\n    \"billowing-sail\",\n    \"hushed-green\",\n    \"lambs-wool\",\n    \"winter-wheat\",\n    \"summer-melon\",\n    \"chamomile\",\n    \"cornhusk\",\n    \"apricot-gelato\",\n    \"biscotti\",\n    \"asparagus-green\",\n    \"oyster-white\",\n    \"putty\",\n    \"moth\",\n    \"wood-ash\",\n    \"gravel\",\n    \"pale-khaki\",\n    \"light-gray\",\n    \"silver-green\",\n    \"pelican\",\n    \"overcast\",\n    \"tidal-foam\",\n    \"agate-gray\",\n    \"alfalfa\",\n    \"castle-wall\",\n    \"oyster-gray\",\n    \"cement\",\n    \"spray-green\",\n    \"eucalyptus\",\n    \"twill\",\n    \"olive-gray\",\n    \"chinchilla\",\n    \"seneca-rock\",\n    \"laurel-oak\",\n    \"coriander\",\n    \"dune\",\n    \"lead-gray\",\n    \"covert-green\",\n    \"oxford-tan\",\n    \"plaza-taupe\",\n    \"tuffet\",\n    \"silver-mink\",\n    \"timber-wolf\",\n    \"taupe-gray\",\n    \"pine-bark\",\n    \"pumice-stone\",\n    \"simply-taupe\",\n    \"aluminum\",\n    \"cobblestone\",\n    \"brindle\",\n    \"walnut\",\n    \"bungee-cord\",\n    \"oatmeal\",\n    \"moonbeam\",\n    \"rainy-day\",\n    \"gray-morn\",\n    \"peyote\",\n    \"feather-gray\",\n    \"goat\",\n    \"white-sand\",\n    \"silver-gray\",\n    \"chateau-gray\",\n    \"string\",\n    \"atmosphere\",\n    \"moon-rock\",\n    \"fungi\",\n    \"silver-lining\",\n    \"moonstruck\",\n    \"pussywillow-gray\",\n    \"london-fog\",\n    \"rock-ridge\",\n    \"moon-mist\",\n    \"castor-gray\",\n    \"glacier-gray\",\n    \"lunar-rock\",\n    \"dawn-blue\",\n    \"gray-violet\",\n    \"vapor-blue\",\n    \"high-rise\",\n    \"limestone\",\n    \"silver-cloud\",\n    \"dove\",\n    \"flint-gray\",\n    \"drizzle\",\n    \"elephant-skin\",\n    \"cinder\",\n    \"steeple-gray\",\n    \"metal\",\n    \"blue-fox\",\n    \"storm-gray\",\n    \"pigeon\",\n    \"mirage-gray\",\n    \"puritan-gray\",\n    \"wrought-iron\",\n    \"opal-gray\",\n    \"wild-dove\",\n    \"neutral-gray\",\n    \"gargoyle\",\n    \"smoked-pearl\",\n    \"sedona-sage\",\n    \"gunmetal\",\n    \"wind-chime\",\n    \"paloma\",\n    \"charcoal-gray\",\n    \"steel-gray\",\n    \"pewter\",\n    \"castlerock\",\n    \"nine-iron\",\n    \"ash\",\n    \"cloudburst\",\n    \"frost-gray\",\n    \"excalibur\",\n    \"dark-gull-gray\",\n    \"rabbit\",\n    \"shale\",\n    \"fossil\",\n    \"major-brown\",\n    \"chocolate-chip\",\n    \"canteen\",\n    \"stone-gray\",\n    \"capers\",\n    \"beech\",\n    \"tarmac\",\n    \"wren\",\n    \"black-olive\",\n    \"beluga\",\n    \"black-ink\",\n    \"peat\",\n    \"jet-set\",\n    \"iron\",\n    \"plum-kitten\",\n    \"turkish-coffee\",\n    \"black-coffee\",\n    \"after-dark\",\n    \"licorice\",\n    \"raven\",\n    \"jet-black\",\n    \"phantom\",\n    \"stretch-limo\",\n    \"moonless-night\",\n    \"caviar\",\n    \"pirate-black\",\n    \"anthracite\",\n    \"vanilla-cream\",\n    \"dawn\",\n    \"gray-sand\",\n    \"autumn-blonde\",\n    \"apricot-illusion\",\n    \"mellow-buff\",\n    \"sheepskin\",\n    \"almond-buff\",\n    \"beige\",\n    \"sand\",\n    \"latte\",\n    \"tan\",\n    \"doe\",\n    \"indian-tan\",\n    \"safari\",\n    \"candied-ginger\",\n    \"warm-sand\",\n    \"cuban-sand\",\n    \"nougat\",\n    \"natural\",\n    \"nomad\",\n    \"frozen-dew\",\n    \"bleached-sand\",\n    \"pebble\",\n    \"croissant\",\n    \"incense\",\n    \"cornstalk\",\n    \"tannin\",\n    \"green-haze\",\n    \"mojave-desert\",\n    \"taos-taupe\",\n    \"lark\",\n    \"kelp\",\n    \"antique-bronze\",\n    \"dull-gold\",\n    \"brown-sugar\",\n    \"chipmunk\",\n    \"tobacco-brown\",\n    \"bison\",\n    \"monks-robe\",\n    \"dachshund\",\n    \"toffee\",\n    \"aztec\",\n    \"cocoa-brown\",\n    \"partridge\",\n    \"friar-brown\",\n    \"mustang\",\n    \"pinecone\",\n    \"potting-soil\",\n    \"ermine\",\n    \"otter\",\n    \"kangaroo\",\n    \"sepia\",\n    \"coffee-liqueur\",\n    \"desert-palm\",\n    \"teak\",\n    \"shitake\",\n    \"cub\",\n    \"carafe\",\n    \"dark-earth\",\n    \"slate-black\",\n    \"chocolate-brown\",\n    \"demitasse\",\n    \"deep-taupe\",\n    \"shopping-bag\",\n    \"chestnut\",\n    \"bracken\",\n    \"seal-brown\",\n    \"java\",\n    \"coffee-bean\",\n    \"mother-of-pearl\",\n    \"pastel-rose-tan\",\n    \"novelle-peach\",\n    \"sun-kiss\",\n    \"ivory-cream\",\n    \"shifting-sand\",\n    \"appleblossom\",\n    \"eggnog\",\n    \"cream-tan\",\n    \"sand-dollar\",\n    \"smoke-gray\",\n    \"doeskin\",\n    \"sesame\",\n    \"light-taupe\",\n    \"warm-taupe\",\n    \"stucco\",\n    \"almondine\",\n    \"chanterelle\",\n    \"ginger-snap\",\n    \"woodsmoke\",\n    \"amphora\",\n    \"moonlight\",\n    \"frappe\",\n    \"rugby-tan\",\n    \"roebuck\",\n    \"praline\",\n    \"burro\",\n    \"beaver-fur\",\n    \"toasted-almond\",\n    \"tawny-birch\",\n    \"macaroon\",\n    \"tawny-brown\",\n    \"camel\",\n    \"toast\",\n    \"toasted-nut\",\n    \"nude\",\n    \"tender-peach\",\n    \"alesan\",\n    \"pale-peach\",\n    \"peach-puree\",\n    \"bellini\",\n    \"amberlight\",\n    \"peach-dust\",\n    \"linen\",\n    \"scallop-shell\",\n    \"soft-pink\",\n    \"pale-dogwood\",\n    \"silver-peony\",\n    \"rose-dust\",\n    \"shell\",\n    \"whisper-pink\",\n    \"pink-tint\",\n    \"evening-sand\",\n    \"sirocco\",\n    \"brush\",\n    \"cafe-au-lait\",\n    \"cameo-rose\",\n    \"pale-blush\",\n    \"rose-cloud\",\n    \"spanish-villa\",\n    \"maple-sugar\",\n    \"tuscany\",\n    \"cork\",\n    \"bisque\",\n    \"almost-apricot\",\n    \"pink-sand\",\n    \"peach-nougat\",\n    \"peach-bloom\",\n    \"dusty-coral\",\n    \"cafe-creme\",\n    \"sandstorm\",\n    \"butterum\",\n    \"biscuit\",\n    \"cashew\",\n    \"almond\",\n    \"lion\",\n    \"thrush\",\n    \"mocha-mousse\",\n    \"pecan-brown\",\n    \"hazel\",\n    \"bran\",\n    \"adobe\",\n    \"leather-brown\",\n    \"glazed-ginger\",\n    \"sandstone\",\n    \"caramel\",\n    \"amber-brown\",\n    \"sierra\",\n    \"ginger-bread\",\n    \"mocha-bisque\",\n    \"tortoise-shell\",\n    \"pheasant\",\n    \"sunburn\",\n    \"raw-sienna\",\n    \"autumn-leaf\",\n    \"mecca-orange\",\n    \"rust\",\n    \"bombay-brown\",\n    \"frosted-almond\",\n    \"gilded-beige\",\n    \"pale-gold\",\n    \"rich-gold\",\n    \"copper\",\n    \"copper-coin\",\n    \"silver\",\n    \"raw-umber\",\n    \"brownie\",\n    \"acorn\",\n    \"clove\",\n    \"carob-brown\",\n    \"russet\",\n    \"rawhide\",\n    \"chutney\",\n    \"baked-clay\",\n    \"copper-brown\",\n    \"brown-patina\",\n    \"rustic-brown\",\n    \"coconut-shell\",\n    \"sequoia\",\n    \"root-beer\",\n    \"brunette\",\n    \"sable\",\n    \"cinnamon\",\n    \"fudgesickle\",\n    \"mink\",\n    \"cappuccino\",\n    \"cognac\",\n    \"nutmeg\",\n    \"french-roast\",\n    \"deep-mahogany\",\n    \"rum-raisin\",\n    \"brown-stone\",\n    \"bitter-chocolate\",\n    \"mahogany\",\n    \"henna\",\n    \"arabian-spice\",\n    \"hot-chocolate\",\n    \"russet-brown\",\n    \"madder-brown\",\n    \"andorra\",\n    \"afterglow\",\n    \"transparent-yellow\",\n    \"double-cream\",\n    \"sunlight\",\n    \"straw\",\n    \"jojoba\",\n    \"rattan\",\n    \"boulder\",\n    \"sea-mist\",\n    \"reed-yellow\",\n    \"chino-green\",\n    \"parsnip\",\n    \"dusty-yellow\",\n    \"silver-fern\",\n    \"lemon-grass\",\n    \"raffia\",\n    \"golden-mist\",\n    \"pampas\",\n    \"bamboo\",\n    \"cress-green\",\n    \"olive-oil\",\n    \"dried-moss\",\n    \"celery\",\n    \"acacia\",\n    \"sulphur\",\n    \"oil-yellow\",\n    \"green-sulphur\",\n    \"golden-palm\",\n    \"cocoon\",\n    \"hemp\",\n    \"southern-moss\",\n    \"olivenite\",\n    \"golden-green\",\n    \"antique-gold\",\n    \"burnished-gold\",\n    \"french-vanilla\",\n    \"pastel-yellow\",\n    \"tender-yellow\",\n    \"wax-yellow\",\n    \"lemonade\",\n    \"elfin-yellow\",\n    \"limelight\",\n    \"dusky-citron\",\n    \"muted-lime\",\n    \"endive\",\n    \"custard\",\n    \"canary-yellow\",\n    \"yellow-cream\",\n    \"cream-gold\",\n    \"aurora\",\n    \"green-sheen\",\n    \"maize\",\n    \"blazing-yellow\",\n    \"buttercup\",\n    \"empire-yellow\",\n    \"lemon\",\n    \"mimosa\",\n    \"aspen-gold\",\n    \"dandelion\",\n    \"vibrant-yellow\",\n    \"cyber-yellow\",\n    \"freesia\",\n    \"lemon-chrome\",\n    \"mellow-yellow\",\n    \"pale-banana\",\n    \"popcorn\",\n    \"sunshine\",\n    \"lemon-drop\",\n    \"primrose-yellow\",\n    \"super-lemon\",\n    \"misted-yellow\",\n    \"sauterne\",\n    \"honey\",\n    \"arrowwood\",\n    \"tawny-olive\",\n    \"ceylon-yellow\",\n    \"lemon-curry\",\n    \"fall-leaf\",\n    \"antelope\",\n    \"mustard-gold\",\n    \"harvest-gold\",\n    \"nugget-gold\",\n    \"golden-spice\",\n    \"golden-yellow\",\n    \"ochre\",\n    \"tinsel\",\n    \"bright-gold\",\n    \"honey-gold\",\n    \"amber-gold\",\n    \"mineral-yellow\",\n    \"narcissus\",\n    \"marzipan\",\n    \"curry\",\n    \"prairie-sand\",\n    \"honey-mustard\",\n    \"wood-thrush\",\n    \"golden-brown\",\n    \"bronze-brown\",\n    \"apple-cinnamon\",\n    \"bone-brown\",\n    \"dijon\",\n    \"bistre\",\n    \"medal-bronze\",\n    \"cumin\",\n    \"breen\",\n    \"snapdragon\",\n    \"banana-cream\",\n    \"daffodil\",\n    \"yolk-yellow\",\n    \"golden-rod\",\n    \"old-gold\",\n    \"spectra-yellow\",\n    \"golden-haze\",\n    \"sahara-sun\",\n    \"new-wheat\",\n    \"cornsilk\",\n    \"buff-yellow\",\n    \"sunset-gold\",\n    \"golden-cream\",\n    \"impala\",\n    \"flax\",\n    \"pale-marigold\",\n    \"amber-yellow\",\n    \"amber\",\n    \"golden-apricot\",\n    \"beeswax\",\n    \"banana\",\n    \"citrus\",\n    \"golden-glow\",\n    \"artisans-gold\",\n    \"sunflower\",\n    \"buckthorn-brown\",\n    \"cathay-spice\",\n    \"taffy\",\n    \"oak-buff\",\n    \"honey-yellow\",\n    \"spruce-yellow\",\n    \"inca-gold\",\n    \"sudan-brown\",\n    \"rubber\",\n    \"wheat\",\n    \"honey-peach\",\n    \"desert-dust\",\n    \"golden-straw\",\n    \"buff\",\n    \"desert-mist\",\n    \"clay\",\n    \"golden-fleece\",\n    \"apricot-sherbet\",\n    \"sunburst\",\n    \"apricot-cream\",\n    \"buff-orange\",\n    \"chamois\",\n    \"warm-apricot\",\n    \"marigold\",\n    \"golden-nugget\",\n    \"butterscotch\",\n    \"nugget\",\n    \"buckskin\",\n    \"yam\",\n    \"golden-oak\",\n    \"gold-fusion\",\n    \"saffron\",\n    \"cadmium-yellow\",\n    \"zinnia\",\n    \"radiant-yellow\",\n    \"apricot\",\n    \"dark-cheddar\",\n    \"apricot-ice\",\n    \"apricot-nectar\",\n    \"gold-earth\",\n    \"apricot-tan\",\n    \"topaz\",\n    \"golden-ochre\",\n    \"apricot-buff\",\n    \"peach-cobbler\",\n    \"salmon-buff\",\n    \"pumpkin\",\n    \"mock-orange\",\n    \"muskmelon\",\n    \"copper-tan\",\n    \"coral-gold\",\n    \"russet-orange\",\n    \"orange-ochre\",\n    \"amberglow\",\n    \"jaffa-orange\",\n    \"apricot-orange\",\n    \"burnt-orange\",\n    \"harvest-pumpkin\",\n    \"blazing-orange\",\n    \"flame-orange\",\n    \"bright-marigold\",\n    \"autumn-glory\",\n    \"sun-orange\",\n    \"persimmon-orange\",\n    \"orange-popsicle\",\n    \"autumn-sunset\",\n    \"tangerine\",\n    \"bird-of-paradise\",\n    \"orange-peel\",\n    \"mandarin-orange\",\n    \"golden-poppy\",\n    \"vibrant-orange\",\n    \"nectarine\",\n    \"coral-rose\",\n    \"carrot\",\n    \"firecracker\",\n    \"red-orange\",\n    \"vermillion-orange\",\n    \"flame\",\n    \"creampuff\",\n    \"bleached-apricot\",\n    \"almond-cream\",\n    \"beach-sand\",\n    \"cream-blush\",\n    \"caramel-cream\",\n    \"peach-fuzz\",\n    \"prairie-sunset\",\n    \"coral-sands\",\n    \"apricot-wash\",\n    \"canyon-sunset\",\n    \"brandied-melon\",\n    \"carnelian\",\n    \"mango\",\n    \"peach\",\n    \"cantaloupe\",\n    \"coral-reef\",\n    \"shell-coral\",\n    \"cadmium-orange\",\n    \"melon\",\n    \"dusty-orange\",\n    \"arabesque\",\n    \"langoustino\",\n    \"ginger\",\n    \"flamingo\",\n    \"orange-rust\",\n    \"burnt-ochre\",\n    \"chili\",\n    \"ginger-spice\",\n    \"autumn-glaze\",\n    \"auburn\",\n    \"picante\",\n    \"tandori-spice\",\n    \"cinnabar\",\n    \"bossa-nova\",\n    \"tropical-peach\",\n    \"peach-parfait\",\n    \"coral-pink\",\n    \"dusty-pink\",\n    \"muted-clay\",\n    \"shrimp\",\n    \"tawny-orange\",\n    \"coral-haze\",\n    \"canyon-clay\",\n    \"terra-cotta\",\n    \"desert-sand\",\n    \"light-mahogany\",\n    \"cedar-wood\",\n    \"withered-rose\",\n    \"rose-dawn\",\n    \"ash-rose\",\n    \"old-rose\",\n    \"brick-dust\",\n    \"canyon-rose\",\n    \"dusty-cedar\",\n    \"marsala\",\n    \"apricot-brandy\",\n    \"aragon\",\n    \"hot-sauce\",\n    \"bruschetta\",\n    \"etruscan-red\",\n    \"redwood\",\n    \"burnt-brick\",\n    \"faded-rose\",\n    \"baked-apple\",\n    \"pompeian-red\",\n    \"ketchup\",\n    \"red-ochre\",\n    \"barn-red\",\n    \"burnt-henna\",\n    \"peach-pearl\",\n    \"peach-melba\",\n    \"apricot-blush\",\n    \"peach-bud\",\n    \"coral-almond\",\n    \"lobster-bisque\",\n    \"lantana\",\n    \"peach-nectar\",\n    \"salmon\",\n    \"peach-amber\",\n    \"desert-flower\",\n    \"peach-pink\",\n    \"burnt-coral\",\n    \"crabapple\",\n    \"papaya-punch\",\n    \"fusion-coral\",\n    \"fresh-salmon\",\n    \"persimmon\",\n    \"coral\",\n    \"living-coral\",\n    \"hot-coral\",\n    \"shell-pink\",\n    \"georgia-peach\",\n    \"sugar-coral\",\n    \"dubarry\",\n    \"porcelain-rose\",\n    \"spiced-coral\",\n    \"deep-sea-coral\",\n    \"rose-of-sharon\",\n    \"cayenne\",\n    \"hibiscus\",\n    \"poinsettia\",\n    \"chrysanthemum\",\n    \"cranberry\",\n    \"cardinal\",\n    \"tigerlily\",\n    \"grenadine\",\n    \"mandarin-red\",\n    \"fiesta\",\n    \"cherry-tomato\",\n    \"orange-com\",\n    \"spicy-orange\",\n    \"camellia\",\n    \"nasturtium\",\n    \"emberglow\",\n    \"burnt-sienna\",\n    \"paprika\",\n    \"red-clay\",\n    \"molten-lava\",\n    \"bittersweet\",\n    \"poppy-red\",\n    \"tomato\",\n    \"fiery-red\",\n    \"flame-scarlet\",\n    \"high-risk-red\",\n    \"aurora-red\",\n    \"rococco-red\",\n    \"tomato-puree\",\n    \"lollipop\",\n    \"ski-patrol\",\n    \"scarlet\",\n    \"lipstick-red\",\n    \"crimson\",\n    \"racing-red\",\n    \"mars-red\",\n    \"tango-red\",\n    \"chinese-red\",\n    \"ribbon-red\",\n    \"true-red\",\n    \"chili-pepper\",\n    \"quartz-pink\",\n    \"pink-icing\",\n    \"blossom\",\n    \"peaches-n-cream\",\n    \"candlelight-peach\",\n    \"strawberry-ice\",\n    \"peach-blossom\",\n    \"flamingo-pink\",\n    \"confetti\",\n    \"bubblegum\",\n    \"pink-lemonade\",\n    \"camellia-rose\",\n    \"rapture-rose\",\n    \"desert-rose\",\n    \"geranium-pink\",\n    \"conch-shell\",\n    \"salmon-rose\",\n    \"strawberry-pink\",\n    \"sunkist-coral\",\n    \"calypso-coral\",\n    \"tea-rose\",\n    \"geranium\",\n    \"paradise-pink\",\n    \"teaberry\",\n    \"rouge-red\",\n    \"raspberry\",\n    \"azalea\",\n    \"virtual-pink\",\n    \"claret-red\",\n    \"raspberry-wine\",\n    \"rose-red\",\n    \"barberry\",\n    \"bright-rose\",\n    \"persian-red\",\n    \"cerise\",\n    \"pink-lady\",\n    \"lilac-sachet\",\n    \"prism-pink\",\n    \"begonia-pink\",\n    \"fuchsia-pink\",\n    \"rosebloom\",\n    \"ibis-rose\",\n    \"sachet-pink\",\n    \"wild-orchid\",\n    \"aurora-pink\",\n    \"chateau-rose\",\n    \"morning-glory\",\n    \"azalea-pink\",\n    \"shocking-pink\",\n    \"hot-pink\",\n    \"fandango-pink\",\n    \"honeysuckle\",\n    \"raspberry-sorbet\",\n    \"carmine\",\n    \"fuchsia-rose\",\n    \"beetroot-purple\",\n    \"pink-carnation\",\n    \"carmine-rose\",\n    \"magenta\",\n    \"pink-flambe\",\n    \"fuchsia-purple\",\n    \"lilac-rose\",\n    \"very-berry\",\n    \"super-pink\",\n    \"phlox-pink\",\n    \"raspberry-rose\",\n    \"rose-violet\",\n    \"fuchsia-red\",\n    \"cactus-flower\",\n    \"magenta-haze\",\n    \"shrinking-violet\",\n    \"primrose-pink\",\n    \"silver-pink\",\n    \"powder-pink\",\n    \"mauveglow\",\n    \"brandied-apricot\",\n    \"dusty-rose\",\n    \"mauve-morn\",\n    \"mauve-chalk\",\n    \"pearl\",\n    \"bridal-rose\",\n    \"blush\",\n    \"baroque-rose\",\n    \"slate-rose\",\n    \"mineral-red\",\n    \"garnet-rose\",\n    \"holly-berry\",\n    \"american-beauty\",\n    \"jester-red\",\n    \"rio-red\",\n    \"rumba-red\",\n    \"earth-red\",\n    \"deep-claret\",\n    \"garnet\",\n    \"brick-red\",\n    \"rosewood\",\n    \"tibetan-red\",\n    \"biking-red\",\n    \"apple-butter\",\n    \"oxblood-red\",\n    \"cowhide\",\n    \"burnt-russet\",\n    \"ruby-wine\",\n    \"cordovan\",\n    \"tawny-port\",\n    \"creole-pink\",\n    \"peach-blush\",\n    \"cloud-pink\",\n    \"veiled-rose\",\n    \"pearl-blush\",\n    \"english-rose\",\n    \"lotus\",\n    \"rosewater\",\n    \"peach-whip\",\n    \"rose-smoke\",\n    \"coral-cloud\",\n    \"misty-rose\",\n    \"peach-beige\",\n    \"cameo-brown\",\n    \"seashell-pink\",\n    \"chintz-rose\",\n    \"impatiens-pink\",\n    \"peachskin\",\n    \"mellow-rose\",\n    \"rose-tan\",\n    \"rosette\",\n    \"mauvewood\",\n    \"rose-wine\",\n    \"malaga\",\n    \"dry-rose\",\n    \"hawthorn-rose\",\n    \"maroon\",\n    \"wild-ginger\",\n    \"sangria\",\n    \"red-bud\",\n    \"beaujolais\",\n    \"anemone\",\n    \"beet-red\",\n    \"red-plum\",\n    \"rhododendron\",\n    \"barely-pink\",\n    \"blushing-bride\",\n    \"cradle-pink\",\n    \"pale-lilac\",\n    \"chalk-pink\",\n    \"light-lilac\",\n    \"pink-nectar\",\n    \"heavenly-pink\",\n    \"potpourri\",\n    \"crystal-pink\",\n    \"pink-dogwood\",\n    \"crystal-rose\",\n    \"strawberry-cream\",\n    \"gossamer-pink\",\n    \"rose-shadow\",\n    \"orchid-pink\",\n    \"almond-blossom\",\n    \"coral-blush\",\n    \"candy-pink\",\n    \"peony\",\n    \"sea-pink\",\n    \"cashmere-rose\",\n    \"wild-rose\",\n    \"orchid-smoke\",\n    \"polignac\",\n    \"lilas\",\n    \"mauve-orchid\",\n    \"orchid-haze\",\n    \"parfait-pink\",\n    \"pink-mist\",\n    \"cameo-pink\",\n    \"sweet-lilac\",\n    \"pink-lavender\",\n    \"pastel-lavender\",\n    \"orchid\",\n    \"lilac-chiffon\",\n    \"moonlite-mauve\",\n    \"cyclamen\",\n    \"opera-mauve\",\n    \"crocus\",\n    \"mulberry\",\n    \"striking-purple\",\n    \"violet\",\n    \"iris-orchid\",\n    \"radiant-orchid\",\n    \"spring-crocus\",\n    \"meadow-mauve\",\n    \"amethyst\",\n    \"magenta-purple\",\n    \"rosebud\",\n    \"purple-orchid\",\n    \"festival-fuchsia\",\n    \"baton-rouge\",\n    \"boysenberry\",\n    \"raspberry-radiance\",\n    \"purple-potion\",\n    \"dahlia-mauve\",\n    \"vivid-viola\",\n    \"wild-aster\",\n    \"deep-orchid\",\n    \"clover\",\n    \"purple-wine\",\n    \"hollyhock\",\n    \"hyacinth-violet\",\n    \"dahlia\",\n    \"sparkling-grape\",\n    \"byzantium\",\n    \"phlox\",\n    \"grape-juice\",\n    \"gloxinia\",\n    \"crystal-gray\",\n    \"mushroom\",\n    \"shadow-gray\",\n    \"sphinx\",\n    \"bark\",\n    \"fawn\",\n    \"adobe-rose\",\n    \"pale-mauve\",\n    \"woodrose\",\n    \"deauville-mauve\",\n    \"twilight-mauve\",\n    \"rose-taupe\",\n    \"rose-brown\",\n    \"roan-rouge\",\n    \"antler\",\n    \"peppercorn\",\n    \"raisin\",\n    \"huckleberry\",\n    \"catawba-grape\",\n    \"puce\",\n    \"fudge\",\n    \"mahogany-rose\",\n    \"burlwood\",\n    \"marron\",\n    \"decadent-chocolate\",\n    \"red-mahogany\",\n    \"vineyard-wine\",\n    \"winetasting\",\n    \"port\",\n    \"chocolate-truffle\",\n    \"burgundy\",\n    \"zinfandel\",\n    \"windsor-wine\",\n    \"port-royale\",\n    \"fig\",\n    \"violet-ice\",\n    \"burnished-lilac\",\n    \"keepsake-lilac\",\n    \"mauve-shadows\",\n    \"dawn-pink\",\n    \"fragrant-lilac\",\n    \"mauve-mist\",\n    \"heather-rose\",\n    \"red-violet\",\n    \"mellow-mauve\",\n    \"bordeaux\",\n    \"violet-quartz\",\n    \"damson\",\n    \"amaranth\",\n    \"zephyr\",\n    \"dusky-orchid\",\n    \"grape-shake\",\n    \"wistful-mauve\",\n    \"tulipwood\",\n    \"grape-nectar\",\n    \"argyle-purple\",\n    \"nostalgia-rose\",\n    \"deco-rose\",\n    \"renaissance-rose\",\n    \"nocturne\",\n    \"crushed-berry\",\n    \"crushed-violets\",\n    \"mauve-wine\",\n    \"plum-wine\",\n    \"eggplant\",\n    \"prune\",\n    \"prune-purple\",\n    \"grape-wine\",\n    \"italian-plum\",\n    \"potent-purple\",\n    \"lavender-herb\",\n    \"lavender-mist\",\n    \"valerian\",\n    \"very-grape\",\n    \"grapeade\",\n    \"purple-gumdrop\",\n    \"berry-conserve\",\n    \"chinese-violet\",\n    \"crushed-grape\",\n    \"concord-grape\",\n    \"sunset-purple\",\n    \"wood-violet\",\n    \"purple-passion\",\n    \"dark-purple\",\n    \"grape-jam\",\n    \"deep-purple\",\n    \"wineberry\",\n    \"grape-royale\",\n    \"plum-purple\",\n    \"hortensia\",\n    \"blackberry-wine\",\n    \"navy-cosmos\",\n    \"indigo\",\n    \"purple-pennant\",\n    \"plum-perfect\",\n    \"sweet-grape\",\n    \"shadow-purple\",\n    \"blackberry-cordial\",\n    \"purple-reign\",\n    \"mulberry-purple\",\n    \"gothic-grape\",\n    \"grape\",\n    \"mysterioso\",\n    \"purple-velvet\",\n    \"nightshade\",\n    \"orchid-tint\",\n    \"lilac-ash\",\n    \"gray-lilac\",\n    \"hushed-violet\",\n    \"cloud-gray\",\n    \"quail\",\n    \"nirvana\",\n    \"orchid-hush\",\n    \"iris\",\n    \"sea-fog\",\n    \"elderberry\",\n    \"black-plum\",\n    \"flint\",\n    \"sassafras\",\n    \"evening-haze\",\n    \"thistle\",\n    \"lavender-gray\",\n    \"minimal-gray\",\n    \"purple-ash\",\n    \"gray-ridge\",\n    \"purple-sage\",\n    \"heirloom-lilac\",\n    \"wisteria\",\n    \"dusk\",\n    \"daybreak\",\n    \"cadet\",\n    \"mulled-grape\",\n    \"purple-plumeria\",\n    \"lilac-marble\",\n    \"ashes-of-roses\",\n    \"gull-gray\",\n    \"zinc\",\n    \"gull\",\n    \"shark\",\n    \"sparrow\",\n    \"orchid-ice\",\n    \"lilac-snow\",\n    \"winsome-orchid\",\n    \"fair-orchid\",\n    \"lavender-frost\",\n    \"orchid-petal\",\n    \"pastel-lilac\",\n    \"orchid-bloom\",\n    \"orchid-bouquet\",\n    \"lupine\",\n    \"violet-tulle\",\n    \"sheer-lilac\",\n    \"african-violet\",\n    \"dusty-lavender\",\n    \"paisley-purple\",\n    \"hyacinth\",\n    \"amethyst-orchid\",\n    \"dewberry\",\n    \"purple-heart\",\n    \"meadow-violet\",\n    \"royal-purple\",\n    \"deep-lavender\",\n    \"royal-lilac\",\n    \"pansy\",\n    \"bright-violet\",\n    \"amaranth-purple\",\n    \"purple-magic\",\n    \"plum\",\n    \"imperial-palace\",\n    \"patrician-purple\",\n    \"loganberry\",\n    \"majesty\",\n    \"imperial-purple\",\n    \"crown-jewel\",\n    \"parachute-purple\",\n    \"lavender-fog\",\n    \"lavendula\",\n    \"lavender\",\n    \"bougainvillea\",\n    \"violet-tulip\",\n    \"chalk-violet\",\n    \"purple-haze\",\n    \"smoky-grape\",\n    \"regal-orchid\",\n    \"viola\",\n    \"orchid-mist\",\n    \"grape-compote\",\n    \"montana-grape\",\n    \"vintage-violet\",\n    \"aster-purple\",\n    \"dahlia-purple\",\n    \"passion-flower\",\n    \"ultra-violet\",\n    \"prism-violet\",\n    \"heliotrope\",\n    \"petunia\",\n    \"corsican-blue\",\n    \"veronica\",\n    \"blue-iris\",\n    \"purple-opulence\",\n    \"gentian-violet\",\n    \"liberty\",\n    \"deep-blue\",\n    \"bleached-denim\",\n    \"heron\",\n    \"skipper-blue\",\n    \"navy-blue\",\n    \"deep-wisteria\",\n    \"blue-ribbon\",\n    \"astral-aura\",\n    \"lilac-hint\",\n    \"misty-lilac\",\n    \"lavender-blue\",\n    \"purple-heather\",\n    \"cosmic-sky\",\n    \"languid-lavender\",\n    \"dapple-gray\",\n    \"sweet-lavender\",\n    \"easter-egg\",\n    \"jacaranda\",\n    \"deep-periwinkle\",\n    \"dusted-peri\",\n    \"violet-storm\",\n    \"baja-blue\",\n    \"thistle-down\",\n    \"persian-violet\",\n    \"twilight-purple\",\n    \"orient-blue\",\n    \"clematis-blue\",\n    \"royal-blue\",\n    \"spectrum-blue\",\n    \"lavender-violet\",\n    \"blue-ice\",\n    \"velvet-morning\",\n    \"marlin\",\n    \"blueprint\",\n    \"blue-depths\",\n    \"medieval-blue\",\n    \"lavender-aura\",\n    \"stonewash\",\n    \"nightshadow-blue\",\n    \"blue-indigo\",\n    \"graystone\",\n    \"crown-blue\",\n    \"deep-cobalt\",\n    \"arctic-ice\",\n    \"gray-dawn\",\n    \"heather\",\n    \"eventide\",\n    \"silver-lake-blue\",\n    \"blue-bonnet\",\n    \"blue-yonder\",\n    \"lavender-lustre\",\n    \"purple-impression\",\n    \"grapemist\",\n    \"vista-blue\",\n    \"cornflower-blue\",\n    \"persian-jewel\",\n    \"wedgewood\",\n    \"skyway\",\n    \"cashmere-blue\",\n    \"blue-bell\",\n    \"placid-blue\",\n    \"della-robbia-blue\",\n    \"provence\",\n    \"ultramarine\",\n    \"allure\",\n    \"colony-blue\",\n    \"moonlight-blue\",\n    \"dutch-blue\",\n    \"delft\",\n    \"limoges\",\n    \"estate-blue\",\n    \"infinity\",\n    \"bijou-blue\",\n    \"coastal-fjord\",\n    \"true-navy\",\n    \"ensign-blue\",\n    \"dark-denim\",\n    \"insignia-blue\",\n    \"air-blue\",\n    \"heritage-blue\",\n    \"ethereal-blue\",\n    \"bonnie-blue\",\n    \"cendre-blue\",\n    \"parisian-blue\",\n    \"faience\",\n    \"alaskan-blue\",\n    \"little-boy-blue\",\n    \"azure-blue\",\n    \"riviera\",\n    \"federal-blue\",\n    \"star-sapphire\",\n    \"bright-cobalt\",\n    \"dusk-blue\",\n    \"regatta\",\n    \"palace-blue\",\n    \"strong-blue\",\n    \"turkish-sea\",\n    \"olympian-blue\",\n    \"classic-blue\",\n    \"marina\",\n    \"campanula\",\n    \"daphne\",\n    \"victoria-blue\",\n    \"snorkel-blue\",\n    \"nautical-blue\",\n    \"princess-blue\",\n    \"dazzling-blue\",\n    \"amparo-blue\",\n    \"deep-ultramarine\",\n    \"surf-the-web\",\n    \"mazarine-blue\",\n    \"true-blue\",\n    \"twilight-blue\",\n    \"kentucky-blue\",\n    \"cerulean\",\n    \"powder-blue\",\n    \"forever-blue\",\n    \"tempest\",\n    \"country-blue\",\n    \"english-manor\",\n    \"illusion-blue\",\n    \"ballad-blue\",\n    \"baby-blue\",\n    \"celestial-blue\",\n    \"blue-fog\",\n    \"flint-stone\",\n    \"folkstone-gray\",\n    \"pearl-blue\",\n    \"monument\",\n    \"dark-slate\",\n    \"midnight-navy\",\n    \"total-eclipse\",\n    \"blue-graphite\",\n    \"dark-navy\",\n    \"ice-flow\",\n    \"quarry\",\n    \"griffin\",\n    \"dark-shadow\",\n    \"ombre-blue\",\n    \"india-ink\",\n    \"ebony\",\n    \"patriot-blue\",\n    \"eclipse\",\n    \"mood-indigo\",\n    \"peacoat\",\n    \"black-iris\",\n    \"dress-blues\",\n    \"blue-nights\",\n    \"angel-falls\",\n    \"dream-blue\",\n    \"ashley-blue\",\n    \"dusty-blue\",\n    \"indian-teal\",\n    \"stargazer\",\n    \"orion-blue\",\n    \"forget-me-not\",\n    \"faded-denim\",\n    \"blue-shadow\",\n    \"coronet-blue\",\n    \"captains-blue\",\n    \"copen-blue\",\n    \"china-blue\",\n    \"adriatic-blue\",\n    \"provincial-blue\",\n    \"niagara\",\n    \"blue-heaven\",\n    \"stellar\",\n    \"real-teal\",\n    \"majolica-blue\",\n    \"starlight-blue\",\n    \"winter-sky\",\n    \"stratosphere\",\n    \"sterling-blue\",\n    \"arona\",\n    \"citadel\",\n    \"blue-mirage\",\n    \"cloud-blue\",\n    \"ether\",\n    \"cameo-blue\",\n    \"stone-blue\",\n    \"tourmaline\",\n    \"smoke-blue\",\n    \"bluestone\",\n    \"aquamarine\",\n    \"sky-blue\",\n    \"milky-blue\",\n    \"blue-grotto\",\n    \"norse-blue\",\n    \"aquarius\",\n    \"maui-blue\",\n    \"blue-mist\",\n    \"river-blue\",\n    \"cyan-blue\",\n    \"horizon-blue\",\n    \"blue-moon\",\n    \"bluejay\",\n    \"mediterranean-blue\",\n    \"bachelor-button\",\n    \"blue-atoll\",\n    \"vivid-blue\",\n    \"hawaiian-ocean\",\n    \"blue-danube\",\n    \"blue-jewel\",\n    \"methyl-blue\",\n    \"malibu-blue\",\n    \"blithe\",\n    \"swedish-blue\",\n    \"dresden-blue\",\n    \"diva-blue\",\n    \"blue-aster\",\n    \"cloisonne\",\n    \"french-blue\",\n    \"brilliant-blue\",\n    \"directoire-blue\",\n    \"skydiver\",\n    \"imperial-blue\",\n    \"deep-water\",\n    \"dark-blue\",\n    \"pastel-blue\",\n    \"clearwater\",\n    \"blue-glow\",\n    \"plume\",\n    \"porcelain-blue\",\n    \"crystal-blue\",\n    \"petit-four\",\n    \"wan-blue\",\n    \"whispering-blue\",\n    \"skylight\",\n    \"aquatic\",\n    \"marine-blue\",\n    \"reef-waters\",\n    \"arctic\",\n    \"chalk-blue\",\n    \"pale-blue\",\n    \"misty-blue\",\n    \"sky-gray\",\n    \"surf-spray\",\n    \"gray-mist\",\n    \"aquifer\",\n    \"blue-glass\",\n    \"icy-morn\",\n    \"canal-blue\",\n    \"pastel-turquoise\",\n    \"aqua-haze\",\n    \"aqua-sea\",\n    \"meadowbrook\",\n    \"glacier\",\n    \"fair-aqua\",\n    \"soothing-sea\",\n    \"bleached-aqua\",\n    \"blue-light\",\n    \"blue-tint\",\n    \"aqua-sky\",\n    \"morning-mist\",\n    \"harbor-gray\",\n    \"eggshell-blue\",\n    \"dusty-turquoise\",\n    \"porcelain\",\n    \"brittany-blue\",\n    \"hydro\",\n    \"blue-haze\",\n    \"nile-blue\",\n    \"mineral-blue\",\n    \"bristol-blue\",\n    \"teal\",\n    \"blue-spruce\",\n    \"sagebrush-green\",\n    \"green-milieu\",\n    \"jadeite\",\n    \"blue-surf\",\n    \"oil-blue\",\n    \"trellis\",\n    \"north-atlantic\",\n    \"sea-pine\",\n    \"slate\",\n    \"silver-blue\",\n    \"abyss\",\n    \"lead\",\n    \"stormy-sea\",\n    \"trooper\",\n    \"goblin-blue\",\n    \"slate-gray\",\n    \"chinois-green\",\n    \"dark-forest\",\n    \"balsam-green\",\n    \"beetle\",\n    \"urban-chic\",\n    \"darkest-spruce\",\n    \"mallard-blue\",\n    \"celestial\",\n    \"saxony-blue\",\n    \"lyons-blue\",\n    \"ink-blue\",\n    \"corsair\",\n    \"legion-blue\",\n    \"aegean-blue\",\n    \"bluesteel\",\n    \"blue-ashes\",\n    \"midnight\",\n    \"blue-sapphire\",\n    \"seaport\",\n    \"moroccan-blue\",\n    \"ocean-depths\",\n    \"blue-coral\",\n    \"dragonfly\",\n    \"pacific\",\n    \"balsam\",\n    \"mediterranea\",\n    \"atlantic-deep\",\n    \"aqua\",\n    \"stillwater\",\n    \"delphinium-blue\",\n    \"larkspur\",\n    \"storm-blue\",\n    \"tapestry\",\n    \"colonial-blue\",\n    \"peacock-blue\",\n    \"capri-breeze\",\n    \"algiers-blue\",\n    \"caneel-bay\",\n    \"caribbean-sea\",\n    \"mosaic-blue\",\n    \"turkish-tile\",\n    \"angel-blue\",\n    \"blue-radiance\",\n    \"capri\",\n    \"blue-curacao\",\n    \"scuba-blue\",\n    \"bluebird\",\n    \"enamel-blue\",\n    \"pool-blue\",\n    \"blue-turquoise\",\n    \"baltic\",\n    \"lake-blue\",\n    \"tile-blue\",\n    \"pagoda-blue\",\n    \"biscay-bay\",\n    \"aruba-blue\",\n    \"ceramic\",\n    \"viridian-green\",\n    \"tropical-green\",\n    \"navigate\",\n    \"deep-peacock-blue\",\n    \"lapis\",\n    \"turquoise\",\n    \"waterfall\",\n    \"lagoon\",\n    \"bright-aqua\",\n    \"porcelain-green\",\n    \"blue-grass\",\n    \"fanfare\",\n    \"atlantis\",\n    \"pool-green\",\n    \"dynasty-green\",\n    \"spectra-green\",\n    \"columbia\",\n    \"teal-blue\",\n    \"parasailing\",\n    \"wasabi\",\n    \"beryl-green\",\n    \"deep-sea\",\n    \"bottle-green\",\n    \"galapagos-green\",\n    \"antique-green\",\n    \"storm\",\n    \"marine-green\",\n    \"sea-green\",\n    \"greenlake\",\n    \"tidepool\",\n    \"ivy\",\n    \"cadmium-green\",\n    \"alpine-green\",\n    \"canton\",\n    \"agate-green\",\n    \"sea-blue\",\n    \"latigo-bay\",\n    \"green-blue-slate\",\n    \"bayou\",\n    \"north-sea\",\n    \"deep-jungle\",\n    \"everglade\",\n    \"teal-green\",\n    \"harbor-blue\",\n    \"deep-lake\",\n    \"shaded-spruce\",\n    \"deep-teal\",\n    \"silver-pine\",\n    \"mallard-green\",\n    \"bistro-green\",\n    \"jasper\",\n    \"bayberry\",\n    \"june-bug\",\n    \"ponderosa-pine\",\n    \"aqua-glass\",\n    \"opal-blue\",\n    \"dusty-aqua\",\n    \"ocean-wave\",\n    \"holiday\",\n    \"cascade\",\n    \"dusty-jade-green\",\n    \"honeydew\",\n    \"brook-green\",\n    \"cabbage\",\n    \"beveled-glass\",\n    \"opal\",\n    \"biscay-green\",\n    \"spearmint\",\n    \"moonlight-jade\",\n    \"bay\",\n    \"yucca\",\n    \"beach-glass\",\n    \"ice-green\",\n    \"cockatoo\",\n    \"florida-keys\",\n    \"bermuda\",\n    \"electric-green\",\n    \"aqua-green\",\n    \"billiard\",\n    \"arcadia\",\n    \"alhambra\",\n    \"deep-green\",\n    \"mint-leaf\",\n    \"peacock-green\",\n    \"vivid-green\",\n    \"emerald\",\n    \"viridis\",\n    \"shady-glade\",\n    \"ultramarine-green\",\n    \"silt-green\",\n    \"frosty-green\",\n    \"iceberg-green\",\n    \"granite-green\",\n    \"green-bay\",\n    \"lily-pad\",\n    \"laurel-wreath\",\n    \"green-spruce\",\n    \"comfrey\",\n    \"dark-ivy\",\n    \"foliage-green\",\n    \"myrtle\",\n    \"posy-green\",\n    \"pineneedle\",\n    \"sea-spray\",\n    \"duck-green\",\n    \"frosty-spruce\",\n    \"fir\",\n    \"evergreen\",\n    \"hunter-green\",\n    \"dark-green\",\n    \"feldspar\",\n    \"smoke-pine\",\n    \"trekking-green\",\n    \"garden-topiary\",\n    \"jungle-green\",\n    \"sycamore\",\n    \"green-gables\",\n    \"vetiver\",\n    \"deep-lichen-green\",\n    \"thyme\",\n    \"kombu-green\",\n    \"deep-forest\",\n    \"forest-night\",\n    \"rosin\",\n    \"celadon\",\n    \"pale-aqua\",\n    \"smoke\",\n    \"foggy-dew\",\n    \"mercury\",\n    \"mineral-gray\",\n    \"aqua-gray\",\n    \"fairest-jade\",\n    \"water-lily\",\n    \"canary-green\",\n    \"almost-aqua\",\n    \"green-tint\",\n    \"sea-foam\",\n    \"desert-sage\",\n    \"whisper-green\",\n    \"celadon-tint\",\n    \"dewkist\",\n    \"green-lily\",\n    \"cameo-green\",\n    \"seagrass\",\n    \"shadow\",\n    \"clearly-aqua\",\n    \"misty-jade\",\n    \"subtle-green\",\n    \"aqua-foam\",\n    \"gossamer-green\",\n    \"lichen\",\n    \"grayed-jade\",\n    \"milky-green\",\n    \"phantom-green\",\n    \"mist-green\",\n    \"birds-egg-green\",\n    \"bok-choy\",\n    \"smoke-green\",\n    \"malachite-green\",\n    \"mistletoe\",\n    \"basil\",\n    \"mineral-green\",\n    \"green-eyes\",\n    \"turf-green\",\n    \"watercress\",\n    \"elm-green\",\n    \"hedge-green\",\n    \"loden-frost\",\n    \"shale-green\",\n    \"kashmir\",\n    \"stone-green\",\n    \"english-ivy\",\n    \"deep-grass-green\",\n    \"piquant-green\",\n    \"forest-green\",\n    \"fluorite-green\",\n    \"cactus\",\n    \"garden-green\",\n    \"artichoke-green\",\n    \"willow-bough\",\n    \"aspen-green\",\n    \"medium-green\",\n    \"juniper\",\n    \"fairway\",\n    \"vineyard-green\",\n    \"dill\",\n    \"greener-pastures\",\n    \"four-leaf-clover\",\n    \"bronze-green\",\n    \"chive\",\n    \"cypress\",\n    \"black-forest\",\n    \"rifle-green\",\n    \"duffel-bag\",\n    \"ambrosia\",\n    \"spray\",\n    \"pastel-green\",\n    \"hemlock\",\n    \"sprucestone\",\n    \"meadow\",\n    \"jadesheen\",\n    \"green-ash\",\n    \"greengage\",\n    \"ming\",\n    \"zephyr-green\",\n    \"peapod\",\n    \"light-grass-green\",\n    \"absinthe-green\",\n    \"neptune-green\",\n    \"creme-de-menthe\",\n    \"winter-green\",\n    \"gumdrop-green\",\n    \"holly-green\",\n    \"parakeet\",\n    \"golf-green\",\n    \"spring-bud\",\n    \"katydid\",\n    \"jade-cream\",\n    \"ming-green\",\n    \"greenbriar\",\n    \"leprechaun\",\n    \"pine-green\",\n    \"blarney\",\n    \"mint\",\n    \"deep-mint\",\n    \"simply-green\",\n    \"pepper-green\",\n    \"bosphorus\",\n    \"verdant-green\",\n    \"seacrest\",\n    \"gleam\",\n    \"nile-green\",\n    \"quiet-green\",\n    \"fair-green\",\n    \"forest-shade\",\n    \"jade-green\",\n    \"patina-green\",\n    \"pistachio-green\",\n    \"arcadian-green\",\n    \"grass-green\",\n    \"bud-green\",\n    \"green-tea\",\n    \"tendril\",\n    \"paradise-green\",\n    \"lime-green\",\n    \"jasmine-green\",\n    \"green-flash\",\n    \"classic-green\",\n    \"online-lime\",\n    \"treetop\",\n    \"summer-green\",\n    \"spring-bouquet\",\n    \"island-green\",\n    \"irish-green\",\n    \"shamrock\",\n    \"peppermint\",\n    \"mint-green\",\n    \"poison-green\",\n    \"vibrant-green\",\n    \"kelly-green\",\n    \"bright-green\",\n    \"fern-green\",\n    \"jelly-bean\",\n    \"amazon\",\n    \"green-glow\",\n    \"bright-lime-green\",\n    \"greenery\",\n    \"foliage\",\n    \"peridot\",\n    \"meadow-green\",\n    \"woodbine\",\n    \"jade-lime\",\n    \"herbal-garden\",\n    \"leaf-green\",\n    \"parrot-green\",\n    \"dark-citron\",\n    \"macaw-green\",\n    \"kiwi\",\n    \"sharp-green\",\n    \"daiquiri-green\",\n    \"wild-lime\",\n    \"linden-green\",\n    \"bright-chartreuse\",\n    \"tender-shoots\",\n    \"lime-punch\",\n    \"sunny-lime\",\n    \"limeade\",\n    \"sulphur-spring\",\n    \"citronelle\",\n    \"apple-green\",\n    \"warm-olive\",\n    \"antique-moss\",\n    \"lime-cream\",\n    \"shadow-lime\",\n    \"lime-sherbet\",\n    \"lettuce-green\",\n    \"sap-green\",\n    \"opaline-green\",\n    \"winter-pear\",\n    \"sylvan-green\",\n    \"glass-green\",\n    \"green-essence\",\n    \"ethereal-green\",\n    \"garden-glade\",\n    \"hay\",\n    \"pale-green\",\n    \"young-wheat\",\n    \"citron\",\n    \"luminary-green\",\n    \"pale-lime-yellow\",\n    \"chardonnay\",\n    \"lima-bean\",\n    \"charlock\",\n    \"mellow-green\",\n    \"shadow-green\",\n    \"celery-green\",\n    \"green-banana\",\n    \"green-oasis\",\n    \"leek-green\",\n    \"weeping-willow\",\n    \"palm\",\n    \"golden-olive\",\n    \"oasis\",\n    \"moss\",\n    \"amber-green\",\n    \"ecru-olive\",\n    \"green-moss\",\n    \"khaki\",\n    \"fennel-seed\",\n    \"willow\",\n    \"bronze-mist\",\n    \"dried-tobacco\",\n    \"tapenade\",\n    \"plantation\",\n    \"fog-green\",\n    \"tender-greens\",\n    \"aloe-wash\",\n    \"celadon-green\",\n    \"laurel-green\",\n    \"swamp\",\n    \"reseda\",\n    \"meadow-mist\",\n    \"butterfly\",\n    \"white-jade\",\n    \"seafoam-green\",\n    \"reed\",\n    \"seedling\",\n    \"foam-green\",\n    \"lily-green\",\n    \"beechnut\",\n    \"nile\",\n    \"sweet-pea\",\n    \"spinach-green\",\n    \"fern\",\n    \"green-olive\",\n    \"epsom\",\n    \"grasshopper\",\n    \"turtle-green\",\n    \"calliste-green\",\n    \"calla-green\",\n    \"cedar-green\",\n    \"pesto\",\n    \"tarragon\",\n    \"sage\",\n    \"iguana\",\n    \"oil-green\",\n    \"loden-green\",\n    \"capulet-olive\",\n    \"olivine\",\n    \"lint\",\n    \"pale-olive-green\",\n    \"sage-green\",\n    \"gray-green\",\n    \"sponge\",\n    \"mermaid\",\n    \"dusky-green\",\n    \"tea\",\n    \"silver-sage\",\n    \"slate-green\",\n    \"elm\",\n    \"mosstone\",\n    \"aloe\",\n    \"olive-drab\",\n    \"cedar\",\n    \"boa\",\n    \"dried-herb\",\n    \"olive-branch\",\n    \"lizard\",\n    \"avocado\",\n    \"fir-green\",\n    \"bog\",\n    \"elmwood\",\n    \"gothic-olive\",\n    \"butternut\",\n    \"nutria\",\n    \"military-olive\",\n    \"dark-olive\",\n    \"moss-gray\",\n    \"abbey-stone\",\n    \"burnt-olive\",\n    \"dusty-olive\",\n    \"ivy-green\",\n    \"olive-night\",\n    \"grape-leaf\",\n    \"porpoise\",\n    \"satellite\",\n    \"driftwood\",\n    \"falcon\",\n    \"morel\",\n    \"fallen-rock\",\n    \"vintage-khaki\",\n    \"crockery\",\n    \"greige\",\n    \"desert-taupe\",\n    \"white-pepper\",\n    \"humus\",\n    \"portabella\",\n    \"caribou\",\n    \"travertine\",\n    \"starfish\",\n    \"semolina\",\n    \"curds-and-whey\",\n    \"tigers-eye\",\n    \"toasted-coconut\",\n    \"rain-drum\",\n    \"pear-sorbet\",\n    \"pineapple-slice\",\n    \"yarrow\",\n    \"anise-flower\",\n    \"flan\",\n    \"sundress\",\n    \"macadamia\",\n    \"lemon-meringue\",\n    \"yellow-iris\",\n    \"goldfinch\",\n    \"lemon-zest\",\n    \"solar-power\",\n    \"samoan-sun\",\n    \"desert-sun\",\n    \"pumpkin-spice\",\n    \"orange-pepper\",\n    \"marmalade\",\n    \"hawaiian-sunset\",\n    \"autumnal\",\n    \"umber\",\n    \"exuberance\",\n    \"puffins-bill\",\n    \"caramel-cafe\",\n    \"gold-flame\",\n    \"cinnamon-stick\",\n    \"potters-clay\",\n    \"rooibos-tea\",\n    \"celosia-orange\",\n    \"orangeade\",\n    \"pureed-pumpkin\",\n    \"tangerine-tango\",\n    \"poinciana\",\n    \"koi\",\n    \"samba\",\n    \"barbados-cherry\",\n    \"haute-red\",\n    \"salsa\",\n    \"scarlet-sage\",\n    \"scooter\",\n    \"red-dahlia\",\n    \"sun-dried-tomato\",\n    \"fired-brick\",\n    \"rhubarb\",\n    \"syrah\",\n    \"pomegranate\",\n    \"cabernet\",\n    \"ballerina\",\n    \"fairy-tale\",\n    \"etherea\",\n    \"foxglove\",\n    \"mesa-rose\",\n    \"jazzy\",\n    \"granita\",\n    \"cherries-jubilee\",\n    \"cabaret\",\n    \"vivacious\",\n    \"bellflower\",\n    \"english-lavendar\",\n    \"rhapsody\",\n    \"acai\",\n    \"tillandsia-purple\",\n    \"picasso-lily\",\n    \"mystical\",\n    \"icelandic-blue\",\n    \"aleutian\",\n    \"silver-bullet\",\n    \"blue-granite\",\n    \"evening-blue\",\n    \"deep-well\",\n    \"night-sky\",\n    \"blue-heron\",\n    \"hydrangea\",\n    \"xenon-blue\",\n    \"brunnera-blue\",\n    \"sky-captain\",\n    \"navy-blazer\",\n    \"dark-sapphire\",\n    \"plein-air\",\n    \"halogen-blue\",\n    \"chambray-blue\",\n    \"bel-air-blue\",\n    \"vintage-indigo\",\n    \"sodalite-blue\",\n    \"parisian-night\",\n    \"monaco-blue\",\n    \"vallarta-blue\",\n    \"salute\",\n    \"outer-space\",\n    \"blueberry\",\n    \"carbon\",\n    \"vulcan\",\n    \"omphalodes\",\n    \"cool-blue\",\n    \"bering-sea\",\n    \"blue-wing-teal\",\n    \"poseidon\",\n    \"mykonos-blue\",\n    \"reflecting-pond\",\n    \"corydalis-blue\",\n    \"blue-topaz\",\n    \"gulf-stream\",\n    \"aquarelle\",\n    \"aqua-splash\",\n    \"botanical-garden\",\n    \"scarab\",\n    \"nimbus-cloud\",\n    \"micro-chip\",\n    \"wet-weather\",\n    \"titanium\",\n    \"december-sky\",\n    \"pavement\",\n    \"magnet\",\n    \"silver-sconce\",\n    \"silver-filigree\",\n    \"quicksilver\",\n    \"storm-front\",\n    \"tornado\",\n    \"eiffel-tower\",\n    \"graphite\",\n    \"alloy\",\n    \"sleet\",\n    \"tradewinds\",\n    \"grisaille\",\n    \"periscope\",\n    \"quiet-shade\",\n    \"turbulence\",\n    \"stormy-weather\",\n    \"iron-gate\",\n    \"forged-iron\",\n    \"asphalt\",\n    \"ghost-gray\",\n    \"brushed-nickel\",\n    \"mourning-dove\",\n    \"belgian-block\",\n    \"agave-green\",\n    \"cilantro\",\n    \"pine-grove\",\n    \"eden\",\n    \"jolly-green\",\n    \"mountain-view\",\n    \"margarita\",\n    \"winter-moss\",\n    \"climbing-ivy\",\n    \"delicioso\",\n    \"mulch\",\n    \"mole\",\n    \"chocolate-torte\",\n    \"ganache\",\n    \"black-bean\",\n    \"espresso\",\n    \"meteorite\",\n    \"tap-shoe\",\n    \"white-alyssum\",\n    \"jet-stream\",\n    \"sweet-cream\",\n    \"buttercream\",\n    \"lemon-icing\",\n    \"sugar-swizzle\",\n    \"coconut-milk\",\n    \"yellow-pear\",\n    \"sea-salt\",\n    \"brilliant-white\",\n    \"cannoli-cream\",\n    \"tofu\",\n    \"pistachio-shell\",\n    \"celandine\",\n    \"lemon-verbena\",\n    \"creme-de-peche\",\n    \"marys-rose\",\n    \"morganite\",\n    \"rose-water\",\n    \"almond-milk\",\n    \"lime-popsicle\",\n    \"golden-kiwi\",\n    \"meadowlark\",\n    \"evening-primrose\",\n    \"habanero-gold\",\n    \"minion-yellow\",\n    \"soybean\",\n    \"jurassic-gold\",\n    \"brown-rice\",\n    \"peach-quartz\",\n    \"peachy-keen\",\n    \"brazilian-sand\",\n    \"pink-salt\",\n    \"rose-quartz\",\n    \"ballet-slipper\",\n    \"cherry-blossom\",\n    \"antarctica\",\n    \"oyster-mushroom\",\n    \"tanager-turquoise\",\n    \"limpet-shell\",\n    \"iced-aqua\",\n    \"acid-lime\",\n    \"spicy-mustard\",\n    \"kumquat\",\n    \"irish-cream\",\n    \"orange-chiffon\",\n    \"hazelnut\",\n    \"sepia-rose\",\n    \"raindrops\",\n    \"zen-blue\",\n    \"quiet-gray\",\n    \"airy-blue\",\n    \"harbor-mist\",\n    \"sea-angel\",\n    \"baltic-sea\",\n    \"antiqua-sand\",\n    \"island-paradise\",\n    \"tibetan-stone\",\n    \"mango-mojito\",\n    \"ginger-root\",\n    \"iced-coffee\",\n    \"autumn-blaze\",\n    \"golden-orange\",\n    \"porcini\",\n    \"iceland-poppy\",\n    \"papaya\",\n    \"carrot-curl\",\n    \"turmeric\",\n    \"tangelo\",\n    \"fenugreek\",\n    \"dusted-clay\",\n    \"pastry-shell\",\n    \"blooming-dahlia\",\n    \"crocus-petal\",\n    \"purple-rose\",\n    \"lilac-breeze\",\n    \"serenity\",\n    \"crystal-seas\",\n    \"golden-lime\",\n    \"split-pea\",\n    \"lentil-sprout\",\n    \"pure-cashmere\",\n    \"sun-baked\",\n    \"peach-caramel\",\n    \"tomato-cream\",\n    \"orange-tiger\",\n    \"meerkat\",\n    \"exotic-orange\",\n    \"dragon-fire\",\n    \"coral-quartz\",\n    \"peach-echo\",\n    \"purple-dove\",\n    \"sand-verbena\",\n    \"lilac-gray\",\n    \"granada-sky\",\n    \"tree-house\",\n    \"chai-tea\",\n    \"roasted-pecan\",\n    \"roasted-cashew\",\n    \"winter-twig\",\n    \"petrified-oak\",\n    \"argan-oil\",\n    \"autumn-maple\",\n    \"sepia-tint\",\n    \"spice-route\",\n    \"scarlet-ibis\",\n    \"summer-fig\",\n    \"moonscape\",\n    \"fruit-dove\",\n    \"pink-yarrow\",\n    \"toadstool\",\n    \"bodacious\",\n    \"diffused-orchid\",\n    \"fairy-wren\",\n    \"sunlit-allium\",\n    \"sharkskin\",\n    \"pale-iris\",\n    \"iolite\",\n    \"gray-flannel\",\n    \"riverside\",\n    \"quiet-harbor\",\n    \"lichen-blue\",\n    \"pacific-coast\",\n    \"ibiza-blue\",\n    \"navagio-bay\",\n    \"barrier-reef\",\n    \"guacamole\",\n    \"kale\",\n    \"mayfly\",\n    \"twist-of-lime\",\n    \"martini-olive\",\n    \"emperador\",\n    \"thai-curry\",\n    \"honey-ginger\",\n    \"sugar-almond\",\n    \"spiced-apple\",\n    \"chili-oil\",\n    \"plum-truffle\",\n    \"brandy-brown\",\n    \"valiant-poppy\",\n    \"aura-orange\",\n    \"toreador\",\n    \"lychee\",\n    \"goji-berry\",\n    \"arctic-dusk\",\n    \"ephemera\",\n    \"jalapeno-red\",\n    \"love-potion\",\n    \"pink-peacock\",\n    \"grape-kiss\",\n    \"willowherb\",\n    \"charisma\",\n    \"plum-jam\",\n    \"lavender-crystal\",\n    \"purple-sapphire\",\n    \"chive-blossom\",\n    \"purple-corallite\",\n    \"volcanic-glass\",\n    \"gray-blue\",\n    \"blue-horizon\",\n    \"iris-bloom\",\n    \"nebulas-blue\",\n    \"indigo-bunting\",\n    \"fjord-blue\",\n    \"hawaiian-surf\",\n    \"tahitian-tide\",\n    \"quetzal-green\",\n    \"granite-gray\",\n    \"lush-meadow\",\n    \"gray-pinstripe\",\n    \"sea-turtle\",\n    \"deep-depths\",\n    \"kalamata\",\n    \"crocodile\",\n    \"chocolate-plum\",\n    \"chocolate-lab\",\n    \"shaved-chocolate\",\n    \"fondue-fudge\",\n    \"tiramisu\",\n    \"rocky-road\",\n    \"chicory-coffee\",\n    \"smoked-paprika\",\n    \"chocolate-fondant\",\n    \"cherry-mahogany\",\n    \"merlot\",\n    \"red-pear\",\n    \"pickled-beet\",\n    \"plum-caspia\",\n    \"winter-bloom\",\n    \"spiced-plum\",\n    \"violet-indigo\",\n    \"maritime-blue\",\n    \"obsidian\",\n    \"black-beauty\",\n    \"blackened-pearl\",\n    \"odyssey-gray\",\n    \"black-onyx\",\n    \"navy-peony\",\n    \"sargasso-sea\",\n    \"sailor-blue\",\n    \"gibraltar-sea\",\n    \"lapis-blue\",\n    \"baleine-blue\",\n    \"galaxy-blue\",\n    \"blue-opal\",\n    \"moonlit-ocean\",\n    \"deep-dive\",\n    \"crystal-teal\",\n    \"deep-lagoon\",\n    \"sea-moss\",\n    \"forest-biome\",\n    \"rain-forest\"\n  ],\n  \"values\": [\n      \"#f3ece0\",\n      \"#f2f0eb\",\n      \"#f4f5f0\",\n      \"#f0eee9\",\n      \"#f1e8df\",\n      \"#f0eee4\",\n      \"#e7e9e7\",\n      \"#f2e8da\",\n      \"#ede6db\",\n      \"#e1dbc8\",\n      \"#ddd5c7\",\n      \"#ded7c8\",\n      \"#d7d0c0\",\n      \"#d2cfc4\",\n      \"#f0eada\",\n      \"#f5edd6\",\n      \"#ede3d2\",\n      \"#f5ecd2\",\n      \"#e6ddc5\",\n      \"#dfd1bb\",\n      \"#e6dac4\",\n      \"#f3e0be\",\n      \"#f4efc1\",\n      \"#f0debd\",\n      \"#f4e1c1\",\n      \"#ecddbe\",\n      \"#e7d3ad\",\n      \"#e7d1a1\",\n      \"#e0d5c6\",\n      \"#d0c5b1\",\n      \"#e4d7c5\",\n      \"#d8ccbb\",\n      \"#dccdbc\",\n      \"#dbccb5\",\n      \"#dfd1be\",\n      \"#f6e5db\",\n      \"#eeded1\",\n      \"#f3e0d6\",\n      \"#f0dfcc\",\n      \"#eddcc9\",\n      \"#f3dfca\",\n      \"#efdcc3\",\n      \"#e7dcd9\",\n      \"#f5e3e2\",\n      \"#f2e2e0\",\n      \"#eee2dd\",\n      \"#f6e4d9\",\n      \"#f3dfd7\",\n      \"#e5d9d3\",\n      \"#efefe8\",\n      \"#e2e2da\",\n      \"#dfddd7\",\n      \"#e5ebe3\",\n      \"#e0e4d9\",\n      \"#dde2d6\",\n      \"#dadcd0\",\n      \"#e2eaeb\",\n      \"#e1e3de\",\n      \"#e2e6e0\",\n      \"#d3dedf\",\n      \"#e4eadf\",\n      \"#d8e8e6\",\n      \"#d2d8d2\",\n      \"#dde0df\",\n      \"#d6dbd9\",\n      \"#d3d9d1\",\n      \"#d0d9d4\",\n      \"#cbd7d2\",\n      \"#d8e7e7\",\n      \"#d8e9e5\",\n      \"#e5d0b1\",\n      \"#dfc09f\",\n      \"#ead3ae\",\n      \"#e8d0a7\",\n      \"#f2d6ae\",\n      \"#f5d7af\",\n      \"#dac7ab\",\n      \"#d2cdb4\",\n      \"#d2caaf\",\n      \"#d4cab0\",\n      \"#d2cbaf\",\n      \"#d7cab0\",\n      \"#cbbfa2\",\n      \"#bfaf92\",\n      \"#dad8c9\",\n      \"#d7d7c7\",\n      \"#c1bcac\",\n      \"#c3bdab\",\n      \"#bfb9a3\",\n      \"#b1b09f\",\n      \"#b7b59f\",\n      \"#c8c1ab\",\n      \"#cbc1ae\",\n      \"#c4b6a6\",\n      \"#aea692\",\n      \"#b1a992\",\n      \"#a79b82\",\n      \"#a6997a\",\n      \"#9c8e7b\",\n      \"#9a927f\",\n      \"#918c7e\",\n      \"#938772\",\n      \"#998978\",\n      \"#8a7963\",\n      \"#80765f\",\n      \"#b8a99a\",\n      \"#aea393\",\n      \"#a59788\",\n      \"#9f8d7c\",\n      \"#8d8070\",\n      \"#8e7c71\",\n      \"#827064\",\n      \"#cac2b9\",\n      \"#ad9f93\",\n      \"#9f9586\",\n      \"#a89a8e\",\n      \"#82776b\",\n      \"#776a5f\",\n      \"#696156\",\n      \"#cbc3b4\",\n      \"#cdc6bd\",\n      \"#cfc8bd\",\n      \"#cabeb5\",\n      \"#c5bbae\",\n      \"#b8ad9e\",\n      \"#a89a91\",\n      \"#dbd5d1\",\n      \"#c1b7b0\",\n      \"#bbb1a8\",\n      \"#aa9f96\",\n      \"#a89c94\",\n      \"#958b84\",\n      \"#8f8177\",\n      \"#bdb6ab\",\n      \"#c2beb6\",\n      \"#aeaca1\",\n      \"#a29e92\",\n      \"#918c86\",\n      \"#80817d\",\n      \"#646762\",\n      \"#c5c6c7\",\n      \"#c5c5c5\",\n      \"#cacccb\",\n      \"#bbbcbc\",\n      \"#bebdbd\",\n      \"#aeb2b5\",\n      \"#989a98\",\n      \"#beb7b0\",\n      \"#b3ada7\",\n      \"#a09c98\",\n      \"#a09f9c\",\n      \"#8f8982\",\n      \"#8a7e78\",\n      \"#827e7c\",\n      \"#babfbc\",\n      \"#b9bcb6\",\n      \"#b5bab6\",\n      \"#a9afaa\",\n      \"#abafae\",\n      \"#a8b0ae\",\n      \"#999e98\",\n      \"#a49e9e\",\n      \"#8b8c89\",\n      \"#8e918f\",\n      \"#686767\",\n      \"#656466\",\n      \"#686d6c\",\n      \"#5c5d5b\",\n      \"#cac5c2\",\n      \"#9f9c99\",\n      \"#6c6868\",\n      \"#726f70\",\n      \"#666564\",\n      \"#5f5e62\",\n      \"#46434a\",\n      \"#a09998\",\n      \"#837f7f\",\n      \"#848283\",\n      \"#676168\",\n      \"#625d5d\",\n      \"#5f575c\",\n      \"#4a3f41\",\n      \"#806f63\",\n      \"#5b5149\",\n      \"#685a4e\",\n      \"#5e5347\",\n      \"#685e4f\",\n      \"#695e4b\",\n      \"#5b4f3b\",\n      \"#5a5348\",\n      \"#4a4139\",\n      \"#48413b\",\n      \"#4a4843\",\n      \"#44413c\",\n      \"#3b3a36\",\n      \"#262c2a\",\n      \"#736460\",\n      \"#625b5c\",\n      \"#483f39\",\n      \"#3b302f\",\n      \"#3c3535\",\n      \"#3a3536\",\n      \"#413e3d\",\n      \"#2d2c2f\",\n      \"#39373b\",\n      \"#2b2c30\",\n      \"#2f2d30\",\n      \"#292a2d\",\n      \"#363838\",\n      \"#28282d\",\n      \"#f4d8c6\",\n      \"#ebd2b7\",\n      \"#e5ccaf\",\n      \"#eed0ae\",\n      \"#e2c4a6\",\n      \"#d8b998\",\n      \"#dab58f\",\n      \"#ccb390\",\n      \"#d5ba98\",\n      \"#cca67f\",\n      \"#c5a582\",\n      \"#b69574\",\n      \"#b98e68\",\n      \"#ad8567\",\n      \"#baaa91\",\n      \"#bfa387\",\n      \"#c5ae91\",\n      \"#c1a68d\",\n      \"#b69885\",\n      \"#aa907d\",\n      \"#b49f89\",\n      \"#d8cfb2\",\n      \"#daccb4\",\n      \"#cab698\",\n      \"#c4ab86\",\n      \"#af9a7e\",\n      \"#a9947a\",\n      \"#a68a6d\",\n      \"#cac4a4\",\n      \"#c7b595\",\n      \"#bfa77f\",\n      \"#b89b72\",\n      \"#988467\",\n      \"#907954\",\n      \"#8a6f48\",\n      \"#a17249\",\n      \"#976f4c\",\n      \"#9a7352\",\n      \"#6e4f3a\",\n      \"#704822\",\n      \"#704f37\",\n      \"#755139\",\n      \"#7a5747\",\n      \"#6c5043\",\n      \"#725440\",\n      \"#6e493a\",\n      \"#684b40\",\n      \"#61473b\",\n      \"#54392d\",\n      \"#836b4f\",\n      \"#7f674f\",\n      \"#725e43\",\n      \"#6b543e\",\n      \"#6a513b\",\n      \"#5a4632\",\n      \"#655341\",\n      \"#736253\",\n      \"#6e5c4b\",\n      \"#5d473a\",\n      \"#5c4939\",\n      \"#4b3d33\",\n      \"#4e403b\",\n      \"#40342b\",\n      \"#7b6660\",\n      \"#5a4743\",\n      \"#584039\",\n      \"#4f3f3b\",\n      \"#493b39\",\n      \"#433331\",\n      \"#40312f\",\n      \"#e9d4c3\",\n      \"#e9d1bf\",\n      \"#e7cfbd\",\n      \"#ebd1bb\",\n      \"#dac0a7\",\n      \"#d8c0ad\",\n      \"#ddbca0\",\n      \"#ece1d3\",\n      \"#e4c7b8\",\n      \"#decdbe\",\n      \"#cebaa8\",\n      \"#bdab9b\",\n      \"#baa38b\",\n      \"#b19d8d\",\n      \"#af9483\",\n      \"#a58d7f\",\n      \"#a78c8b\",\n      \"#a28776\",\n      \"#977d70\",\n      \"#947764\",\n      \"#9f8672\",\n      \"#c5b1a0\",\n      \"#d1b7a0\",\n      \"#c2a594\",\n      \"#b09080\",\n      \"#ad8b75\",\n      \"#947764\",\n      \"#997867\",\n      \"#d2b49c\",\n      \"#ae856c\",\n      \"#b38b71\",\n      \"#ab856f\",\n      \"#b0846a\",\n      \"#ca9978\",\n      \"#c08768\",\n      \"#f2d3bc\",\n      \"#f8d5b8\",\n      \"#f1ceb3\",\n      \"#fed1bd\",\n      \"#efcfba\",\n      \"#f4c9b1\",\n      \"#e2bea2\",\n      \"#f0d8cc\",\n      \"#edd2c0\",\n      \"#fbd8c9\",\n      \"#f2d8cd\",\n      \"#edcdc2\",\n      \"#e7cfc7\",\n      \"#cdb2a5\",\n      \"#e1cfc6\",\n      \"#dacbbe\",\n      \"#dbcbbd\",\n      \"#ddb6ab\",\n      \"#c39d88\",\n      \"#b99984\",\n      \"#ae8774\",\n      \"#d7b8ab\",\n      \"#e4bfb3\",\n      \"#dbb0a2\",\n      \"#dfbaa9\",\n      \"#c9a38d\",\n      \"#be9785\",\n      \"#ba8671\",\n      \"#edcab5\",\n      \"#e5b39b\",\n      \"#dfb19b\",\n      \"#e6af91\",\n      \"#d99b7c\",\n      \"#d29b83\",\n      \"#c79685\",\n      \"#bd8b69\",\n      \"#c68f65\",\n      \"#b4835b\",\n      \"#a47149\",\n      \"#a7754d\",\n      \"#a0714f\",\n      \"#936b4f\",\n      \"#a47864\",\n      \"#a36e51\",\n      \"#ae7250\",\n      \"#a66e4a\",\n      \"#a3623b\",\n      \"#97572b\",\n      \"#91552b\",\n      \"#c48a69\",\n      \"#c37c54\",\n      \"#a66646\",\n      \"#985c41\",\n      \"#8c4a2f\",\n      \"#8c543a\",\n      \"#754734\",\n      \"#c68463\",\n      \"#b37256\",\n      \"#b9714f\",\n      \"#b56a4c\",\n      \"#bd5745\",\n      \"#b55a30\",\n      \"#9f5130\",\n      \"#d2c2ac\",\n      \"#b39f8d\",\n      \"#bd9865\",\n      \"#c8b273\",\n      \"#c47e5a\",\n      \"#ba6b57\",\n      \"#a2a2a1\",\n      \"#92705f\",\n      \"#8f7265\",\n      \"#7e5e52\",\n      \"#876155\",\n      \"#855c4c\",\n      \"#8f5f50\",\n      \"#865e49\",\n      \"#98594b\",\n      \"#9c5642\",\n      \"#9a6051\",\n      \"#834f3d\",\n      \"#855141\",\n      \"#874e3c\",\n      \"#804839\",\n      \"#714a41\",\n      \"#664238\",\n      \"#6e403c\",\n      \"#6b4139\",\n      \"#63403a\",\n      \"#734b42\",\n      \"#633f33\",\n      \"#8b645a\",\n      \"#7e5c54\",\n      \"#58423f\",\n      \"#553b39\",\n      \"#583432\",\n      \"#593c39\",\n      \"#503130\",\n      \"#824d46\",\n      \"#7c423c\",\n      \"#884332\",\n      \"#683b39\",\n      \"#743332\",\n      \"#6a3331\",\n      \"#603535\",\n      \"#f3e6c9\",\n      \"#f4ecc2\",\n      \"#f3e0ac\",\n      \"#edd59e\",\n      \"#e0c992\",\n      \"#dabe81\",\n      \"#d1b272\",\n      \"#d1be9b\",\n      \"#d8c9a3\",\n      \"#dcc99e\",\n      \"#d9caa5\",\n      \"#d6c69a\",\n      \"#d4cc9a\",\n      \"#bbaa7e\",\n      \"#dcd494\",\n      \"#dac483\",\n      \"#d5cd94\",\n      \"#cfbb7b\",\n      \"#d2b04c\",\n      \"#bca949\",\n      \"#a98b2d\",\n      \"#ccb97e\",\n      \"#cec153\",\n      \"#dacd65\",\n      \"#ddb614\",\n      \"#c4a647\",\n      \"#ae8e2c\",\n      \"#aa8805\",\n      \"#c9b27c\",\n      \"#c0ad7c\",\n      \"#bca66a\",\n      \"#c1a65c\",\n      \"#bdb369\",\n      \"#b59e5f\",\n      \"#aa9855\",\n      \"#efe1a7\",\n      \"#f2e6b1\",\n      \"#ededb7\",\n      \"#ede9ad\",\n      \"#f0e79d\",\n      \"#eeea97\",\n      \"#f0e87d\",\n      \"#e3cc81\",\n      \"#d1c87c\",\n      \"#d2cc81\",\n      \"#e5d68e\",\n      \"#dfd87e\",\n      \"#efdc75\",\n      \"#dec05f\",\n      \"#eddd59\",\n      \"#d9ce52\",\n      \"#eec843\",\n      \"#fee715\",\n      \"#fae03c\",\n      \"#f7d000\",\n      \"#f3bf08\",\n      \"#f0c05a\",\n      \"#ffd662\",\n      \"#ffd02e\",\n      \"#ffda29\",\n      \"#ffd400\",\n      \"#f3c12c\",\n      \"#ffc300\",\n      \"#f0dd9d\",\n      \"#fae199\",\n      \"#f8de8d\",\n      \"#fade85\",\n      \"#fdd878\",\n      \"#f6d155\",\n      \"#e4bf45\",\n      \"#dab965\",\n      \"#c5a253\",\n      \"#ba9238\",\n      \"#bc8d1f\",\n      \"#c4962c\",\n      \"#d4ae40\",\n      \"#cda323\",\n      \"#c9a86a\",\n      \"#b19664\",\n      \"#b08e51\",\n      \"#b68a3a\",\n      \"#c89720\",\n      \"#c6973f\",\n      \"#cb8e16\",\n      \"#d6af66\",\n      \"#c3964d\",\n      \"#cf9f52\",\n      \"#d1a054\",\n      \"#c19552\",\n      \"#d39c43\",\n      \"#c39449\",\n      \"#d8c09d\",\n      \"#be9e6f\",\n      \"#b59a6a\",\n      \"#b68f52\",\n      \"#a47d43\",\n      \"#91672f\",\n      \"#825e2f\",\n      \"#b0885a\",\n      \"#9d7446\",\n      \"#97754c\",\n      \"#98754a\",\n      \"#977547\",\n      \"#927240\",\n      \"#795d34\",\n      \"#fed777\",\n      \"#ffcf73\",\n      \"#fdc04e\",\n      \"#e2b051\",\n      \"#e2a829\",\n      \"#eca825\",\n      \"#f7b718\",\n      \"#fbd897\",\n      \"#dfc08a\",\n      \"#d7b57f\",\n      \"#edc373\",\n      \"#f1bf70\",\n      \"#f7c46c\",\n      \"#f7b768\",\n      \"#f8ce97\",\n      \"#ffc87d\",\n      \"#ffc66e\",\n      \"#fab75a\",\n      \"#efad55\",\n      \"#dda758\",\n      \"#eba851\",\n      \"#fcb953\",\n      \"#f9ac2f\",\n      \"#d99938\",\n      \"#f2ab46\",\n      \"#d39237\",\n      \"#a76f1f\",\n      \"#99642c\",\n      \"#c39b6a\",\n      \"#cf9c63\",\n      \"#ca9456\",\n      \"#be8a4a\",\n      \"#bb7a2c\",\n      \"#ac6b29\",\n      \"#815b37\",\n      \"#dec5a5\",\n      \"#dcbd9e\",\n      \"#e3bc8e\",\n      \"#e6bd8f\",\n      \"#ebc396\",\n      \"#e0b589\",\n      \"#d2a172\",\n      \"#f2d1a0\",\n      \"#facd9e\",\n      \"#f6c289\",\n      \"#f1bd89\",\n      \"#ffbb7c\",\n      \"#f7b26a\",\n      \"#ffb865\",\n      \"#fadc53\",\n      \"#db9b59\",\n      \"#e19640\",\n      \"#cf8848\",\n      \"#d18e54\",\n      \"#d0893f\",\n      \"#be752d\",\n      \"#ffb000\",\n      \"#ffa500\",\n      \"#ee9626\",\n      \"#ffa010\",\n      \"#fc9e21\",\n      \"#f19035\",\n      \"#e08119\",\n      \"#fbbe99\",\n      \"#ecaa79\",\n      \"#dd9c6b\",\n      \"#dd9760\",\n      \"#d08344\",\n      \"#c77943\",\n      \"#cd7e4d\",\n      \"#ffb181\",\n      \"#feaa7b\",\n      \"#f5a26f\",\n      \"#ffa368\",\n      \"#ec935e\",\n      \"#de8e65\",\n      \"#d27d56\",\n      \"#e47127\",\n      \"#dc793a\",\n      \"#dc793e\",\n      \"#d86d39\",\n      \"#c86b3c\",\n      \"#c86733\",\n      \"#d56231\",\n      \"#ffa64f\",\n      \"#fb8b23\",\n      \"#ff8d00\",\n      \"#ff8812\",\n      \"#f48037\",\n      \"#f47327\",\n      \"#ff7913\",\n      \"#f38554\",\n      \"#f88f58\",\n      \"#ff8c55\",\n      \"#fa7a35\",\n      \"#ec6a37\",\n      \"#f56733\",\n      \"#ff7420\",\n      \"#ff8656\",\n      \"#f3774d\",\n      \"#fd6f3b\",\n      \"#f36944\",\n      \"#f05627\",\n      \"#f9633b\",\n      \"#f2552c\",\n      \"#ffcda8\",\n      \"#fccaac\",\n      \"#f4c29f\",\n      \"#fbb995\",\n      \"#f8c19a\",\n      \"#f4ba94\",\n      \"#ffbe98\",\n      \"#ffbb9e\",\n      \"#edaa86\",\n      \"#fbac82\",\n      \"#e1927a\",\n      \"#ce7b5b\",\n      \"#ce785d\",\n      \"#b75e41\",\n      \"#f2a987\",\n      \"#ffa177\",\n      \"#faa181\",\n      \"#ea9575\",\n      \"#f99471\",\n      \"#fe8863\",\n      \"#e27a53\",\n      \"#d16f52\",\n      \"#ca6c56\",\n      \"#c96551\",\n      \"#df7253\",\n      \"#c25a3c\",\n      \"#bb4f35\",\n      \"#be5141\",\n      \"#b65d48\",\n      \"#b3573f\",\n      \"#a15843\",\n      \"#8d3f2d\",\n      \"#9f4440\",\n      \"#9c453b\",\n      \"#973a36\",\n      \"#ffc4b2\",\n      \"#f8bfa8\",\n      \"#e8a798\",\n      \"#deaa9b\",\n      \"#d29380\",\n      \"#e29a86\",\n      \"#d37f6f\",\n      \"#e38e84\",\n      \"#ce8477\",\n      \"#d38377\",\n      \"#bd7b74\",\n      \"#ad6d68\",\n      \"#a1655b\",\n      \"#a26666\",\n      \"#c2877b\",\n      \"#b5817d\",\n      \"#b47b77\",\n      \"#b07069\",\n      \"#af6c67\",\n      \"#ad5d5d\",\n      \"#964f4c\",\n      \"#c26a5a\",\n      \"#b06455\",\n      \"#ab4f41\",\n      \"#a75949\",\n      \"#a2574b\",\n      \"#a6594c\",\n      \"#a14d3a\",\n      \"#bf6464\",\n      \"#b34646\",\n      \"#a4292e\",\n      \"#9a382d\",\n      \"#913832\",\n      \"#8f423b\",\n      \"#7e392f\",\n      \"#ffb2a5\",\n      \"#fbbdaf\",\n      \"#feaea5\",\n      \"#fdb2ab\",\n      \"#e29d94\",\n      \"#dd9289\",\n      \"#da7e7a\",\n      \"#ffb59b\",\n      \"#faaa94\",\n      \"#fb9f93\",\n      \"#ff9687\",\n      \"#fa9a85\",\n      \"#e9897e\",\n      \"#d77e70\",\n      \"#fca289\",\n      \"#ff8576\",\n      \"#ff7f6a\",\n      \"#f67866\",\n      \"#ed7464\",\n      \"#ff6f61\",\n      \"#f35b53\",\n      \"#f88180\",\n      \"#f97272\",\n      \"#f56c73\",\n      \"#f25f66\",\n      \"#ea6b6a\",\n      \"#d75c5d\",\n      \"#d9615b\",\n      \"#dc5b62\",\n      \"#e04951\",\n      \"#dd3848\",\n      \"#cb3441\",\n      \"#be454f\",\n      \"#bb4a4d\",\n      \"#ad3e48\",\n      \"#e2583e\",\n      \"#df3f32\",\n      \"#e74a33\",\n      \"#dd4132\",\n      \"#eb3c27\",\n      \"#da321c\",\n      \"#d73c26\",\n      \"#f6745f\",\n      \"#fe6347\",\n      \"#ea6759\",\n      \"#c65d52\",\n      \"#ce4d42\",\n      \"#c2452d\",\n      \"#b5332e\",\n      \"#d93744\",\n      \"#dc343b\",\n      \"#ce2939\",\n      \"#d01c1f\",\n      \"#cd212a\",\n      \"#c71f2d\",\n      \"#b93a32\",\n      \"#bb363f\",\n      \"#c53346\",\n      \"#cc1c3b\",\n      \"#bb1237\",\n      \"#bc2b3d\",\n      \"#b31a38\",\n      \"#ae0e36\",\n      \"#bd162c\",\n      \"#bc2731\",\n      \"#ac0e2e\",\n      \"#be132d\",\n      \"#b92636\",\n      \"#bf1932\",\n      \"#9b1b30\",\n      \"#efa6aa\",\n      \"#eea0a6\",\n      \"#f2b2ae\",\n      \"#f4a6a3\",\n      \"#f8a39d\",\n      \"#e78b90\",\n      \"#de8286\",\n      \"#f7969e\",\n      \"#e6798e\",\n      \"#ea738d\",\n      \"#ee6d8a\",\n      \"#eb6081\",\n      \"#d16277\",\n      \"#cf6977\",\n      \"#f6909d\",\n      \"#fc8f9b\",\n      \"#ff8d94\",\n      \"#f57f8e\",\n      \"#ea6676\",\n      \"#ee5c6c\",\n      \"#dc7178\",\n      \"#da3d58\",\n      \"#e4445e\",\n      \"#dc3855\",\n      \"#e24666\",\n      \"#d32e5e\",\n      \"#d42e5b\",\n      \"#c6174e\",\n      \"#c84c61\",\n      \"#b63753\",\n      \"#c92351\",\n      \"#bf1945\",\n      \"#c51959\",\n      \"#a21441\",\n      \"#a41247\",\n      \"#efc1d6\",\n      \"#e9adca\",\n      \"#f0a1bf\",\n      \"#ec9abe\",\n      \"#df88b7\",\n      \"#e290b2\",\n      \"#ca628f\",\n      \"#f18aad\",\n      \"#d979a2\",\n      \"#e881a6\",\n      \"#d2738f\",\n      \"#ee819f\",\n      \"#e96a97\",\n      \"#de5b8c\",\n      \"#e55982\",\n      \"#e04f80\",\n      \"#d94f70\",\n      \"#d2386c\",\n      \"#bc4869\",\n      \"#c74375\",\n      \"#cf2d71\",\n      \"#ed7a9e\",\n      \"#e35b8f\",\n      \"#d23c77\",\n      \"#d3507a\",\n      \"#d33479\",\n      \"#bd4275\",\n      \"#b73275\",\n      \"#ce6ba4\",\n      \"#ce5e9a\",\n      \"#cc4385\",\n      \"#c0428a\",\n      \"#ab3475\",\n      \"#a83e6c\",\n      \"#9d446e\",\n      \"#f4e1e6\",\n      \"#eed4d9\",\n      \"#dcb1af\",\n      \"#ecb2b3\",\n      \"#d18489\",\n      \"#ca848a\",\n      \"#ba797d\",\n      \"#ecd6d6\",\n      \"#e5d0cf\",\n      \"#f9dbd8\",\n      \"#d69fa2\",\n      \"#d1969a\",\n      \"#b35a66\",\n      \"#b45865\",\n      \"#b35457\",\n      \"#ac4b55\",\n      \"#b44e5d\",\n      \"#a73340\",\n      \"#9e1030\",\n      \"#8a2232\",\n      \"#7c2439\",\n      \"#95424e\",\n      \"#973443\",\n      \"#953640\",\n      \"#8c373e\",\n      \"#813639\",\n      \"#782a39\",\n      \"#77212e\",\n      \"#844b4d\",\n      \"#70393f\",\n      \"#884344\",\n      \"#7e3940\",\n      \"#77333b\",\n      \"#702f3b\",\n      \"#5c2c35\",\n      \"#f7d5cc\",\n      \"#e4ccc6\",\n      \"#f5d1c8\",\n      \"#f8cdc9\",\n      \"#f4cec5\",\n      \"#f4c6c3\",\n      \"#e2c1c0\",\n      \"#f6dbd8\",\n      \"#dbbeb7\",\n      \"#d3b4ad\",\n      \"#e2a9a1\",\n      \"#caa39a\",\n      \"#d3a297\",\n      \"#c08a80\",\n      \"#f7c8c2\",\n      \"#eec4be\",\n      \"#ffc4bc\",\n      \"#dfb8b6\",\n      \"#d9a6a1\",\n      \"#d19c97\",\n      \"#ce8e8b\",\n      \"#a75d67\",\n      \"#a4596d\",\n      \"#9f5069\",\n      \"#8c4759\",\n      \"#884c5e\",\n      \"#834655\",\n      \"#7c4c53\",\n      \"#982551\",\n      \"#962d49\",\n      \"#80304c\",\n      \"#842c48\",\n      \"#7a1f3d\",\n      \"#7c2946\",\n      \"#722b3f\",\n      \"#f8d7dd\",\n      \"#fbd3d9\",\n      \"#edd0dd\",\n      \"#e1c6cc\",\n      \"#e6c5ca\",\n      \"#dec6d3\",\n      \"#d8aab7\",\n      \"#f4dede\",\n      \"#e7c9ca\",\n      \"#edd0ce\",\n      \"#f7d1d1\",\n      \"#fdc3c6\",\n      \"#f4c3c4\",\n      \"#fac8c3\",\n      \"#f9c2cd\",\n      \"#f3bbca\",\n      \"#f5bec7\",\n      \"#e6b2b8\",\n      \"#f5b0bd\",\n      \"#ed9ca8\",\n      \"#de98ab\",\n      \"#ce879f\",\n      \"#ce8498\",\n      \"#d294aa\",\n      \"#c28799\",\n      \"#b88995\",\n      \"#b58299\",\n      \"#b0879b\",\n      \"#e9c3cf\",\n      \"#e6bccd\",\n      \"#dba9b8\",\n      \"#e8b5ce\",\n      \"#d9afca\",\n      \"#d8a1c4\",\n      \"#d198c5\",\n      \"#de9bc4\",\n      \"#d28fb0\",\n      \"#d687ba\",\n      \"#ca80b1\",\n      \"#c67fae\",\n      \"#a76c97\",\n      \"#944e87\",\n      \"#c17fb5\",\n      \"#a767a2\",\n      \"#ad5e99\",\n      \"#ba69a1\",\n      \"#a9568c\",\n      \"#864d75\",\n      \"#6b264b\",\n      \"#b65f9a\",\n      \"#ad4d8c\",\n      \"#9e2c6a\",\n      \"#973c6c\",\n      \"#85325c\",\n      \"#802a50\",\n      \"#692746\",\n      \"#a64f82\",\n      \"#993c7c\",\n      \"#92316f\",\n      \"#903f75\",\n      \"#8a3371\",\n      \"#8c3573\",\n      \"#823270\",\n      \"#8d4687\",\n      \"#843e83\",\n      \"#773376\",\n      \"#853b7b\",\n      \"#692d5d\",\n      \"#682961\",\n      \"#622e5a\",\n      \"#d7cbc4\",\n      \"#bdaca3\",\n      \"#bba5a0\",\n      \"#ab9895\",\n      \"#a99592\",\n      \"#ae9490\",\n      \"#ba9f99\",\n      \"#c6a4a4\",\n      \"#ae8c8e\",\n      \"#af9294\",\n      \"#8b6f70\",\n      \"#806062\",\n      \"#80565b\",\n      \"#885157\",\n      \"#957a76\",\n      \"#6c5656\",\n      \"#524144\",\n      \"#5b4349\",\n      \"#5d3c43\",\n      \"#503938\",\n      \"#493338\",\n      \"#c5a193\",\n      \"#9b716b\",\n      \"#6e4c4b\",\n      \"#513235\",\n      \"#60373d\",\n      \"#58363d\",\n      \"#492a34\",\n      \"#663336\",\n      \"#612e35\",\n      \"#64313e\",\n      \"#5c2935\",\n      \"#582b36\",\n      \"#502b33\",\n      \"#532d3b\",\n      \"#c2acb1\",\n      \"#c5aeb1\",\n      \"#c0a5ae\",\n      \"#b598a3\",\n      \"#bfa3af\",\n      \"#ceadbe\",\n      \"#c49bd4\",\n      \"#ad6d7f\",\n      \"#a35776\",\n      \"#996378\",\n      \"#96637b\",\n      \"#8b4963\",\n      \"#854c65\",\n      \"#6f3c56\",\n      \"#c89fa5\",\n      \"#9a7182\",\n      \"#886971\",\n      \"#946c74\",\n      \"#805466\",\n      \"#8d5c74\",\n      \"#895c79\",\n      \"#a4777e\",\n      \"#985f68\",\n      \"#865560\",\n      \"#7a4b56\",\n      \"#804f5a\",\n      \"#643a4c\",\n      \"#5b3644\",\n      \"#674550\",\n      \"#613f4c\",\n      \"#603749\",\n      \"#5c3a4d\",\n      \"#5a2f43\",\n      \"#533146\",\n      \"#462639\",\n      \"#b18eaa\",\n      \"#ae90a7\",\n      \"#9f7a93\",\n      \"#927288\",\n      \"#85677b\",\n      \"#7a596f\",\n      \"#765269\",\n      \"#835e81\",\n      \"#7a547f\",\n      \"#7c5379\",\n      \"#6f456e\",\n      \"#75406a\",\n      \"#683d62\",\n      \"#582147\",\n      \"#725671\",\n      \"#50314c\",\n      \"#5a395b\",\n      \"#4f2d54\",\n      \"#51304e\",\n      \"#553b50\",\n      \"#4d3246\",\n      \"#503b53\",\n      \"#4c3957\",\n      \"#432c47\",\n      \"#473442\",\n      \"#4b3b4f\",\n      \"#4e334e\",\n      \"#3f2a47\",\n      \"#56456b\",\n      \"#493c62\",\n      \"#473951\",\n      \"#433455\",\n      \"#46394b\",\n      \"#41354d\",\n      \"#433748\",\n      \"#dbd2db\",\n      \"#d7cdcd\",\n      \"#d4cacd\",\n      \"#d1c0bf\",\n      \"#b7a9ac\",\n      \"#98868c\",\n      \"#a2919b\",\n      \"#cec3d2\",\n      \"#baafbc\",\n      \"#a5929d\",\n      \"#9d848e\",\n      \"#6c5765\",\n      \"#705861\",\n      \"#54353b\",\n      \"#bdb8c7\",\n      \"#b9b3c5\",\n      \"#9890a2\",\n      \"#948d99\",\n      \"#8f8395\",\n      \"#847986\",\n      \"#75697e\",\n      \"#9d96b2\",\n      \"#a198af\",\n      \"#897f98\",\n      \"#8981a0\",\n      \"#6a6378\",\n      \"#675a74\",\n      \"#473854\",\n      \"#c3babf\",\n      \"#b5acab\",\n      \"#a49ca0\",\n      \"#92898a\",\n      \"#918c8f\",\n      \"#6d636b\",\n      \"#69595c\",\n      \"#e0d0db\",\n      \"#e0c7d7\",\n      \"#d4b9cb\",\n      \"#c0aac0\",\n      \"#bdabbe\",\n      \"#bfb4cb\",\n      \"#bdb0d0\",\n      \"#c5aecf\",\n      \"#d1acce\",\n      \"#be9cc1\",\n      \"#c193c0\",\n      \"#b793c0\",\n      \"#b085b7\",\n      \"#a1759c\",\n      \"#8b79b1\",\n      \"#936ca7\",\n      \"#926aa6\",\n      \"#8b5987\",\n      \"#745587\",\n      \"#764f82\",\n      \"#603f83\",\n      \"#775496\",\n      \"#774d8e\",\n      \"#653d7c\",\n      \"#784384\",\n      \"#6a397b\",\n      \"#663271\",\n      \"#5a315d\",\n      \"#604e7a\",\n      \"#6c4e79\",\n      \"#5a4769\",\n      \"#593761\",\n      \"#542c5d\",\n      \"#482d54\",\n      \"#392852\",\n      \"#d2c4d6\",\n      \"#bca4cb\",\n      \"#afa4ce\",\n      \"#9884b9\",\n      \"#9e91c3\",\n      \"#8f7da5\",\n      \"#807396\",\n      \"#b88aac\",\n      \"#a98baf\",\n      \"#a692ba\",\n      \"#917798\",\n      \"#6b5876\",\n      \"#6c5971\",\n      \"#634f62\",\n      \"#7d74a8\",\n      \"#7e6eac\",\n      \"#6d5698\",\n      \"#5f4b8b\",\n      \"#53357d\",\n      \"#4f3872\",\n      \"#4f3466\",\n      \"#646093\",\n      \"#6d6695\",\n      \"#5a5b9f\",\n      \"#60569a\",\n      \"#544275\",\n      \"#4d448a\",\n      \"#44377d\",\n      \"#646f9b\",\n      \"#62617e\",\n      \"#484a72\",\n      \"#403f6f\",\n      \"#443f6f\",\n      \"#3a395f\",\n      \"#363151\",\n      \"#d0d0da\",\n      \"#bcb4c4\",\n      \"#c5c0d0\",\n      \"#bab8d3\",\n      \"#aaaac4\",\n      \"#a2a1ba\",\n      \"#9c9ba7\",\n      \"#9a9bc1\",\n      \"#919bc9\",\n      \"#848dc5\",\n      \"#7c83bc\",\n      \"#696ba0\",\n      \"#5c619d\",\n      \"#5f6db0\",\n      \"#9499bb\",\n      \"#8c8eb2\",\n      \"#66648b\",\n      \"#47457a\",\n      \"#363b7c\",\n      \"#3d428b\",\n      \"#3d3c7c\",\n      \"#767ba5\",\n      \"#70789b\",\n      \"#60688d\",\n      \"#515b87\",\n      \"#2d3359\",\n      \"#263056\",\n      \"#29304e\",\n      \"#9f99aa\",\n      \"#74809a\",\n      \"#4e5368\",\n      \"#49516d\",\n      \"#4d495b\",\n      \"#464b65\",\n      \"#404466\",\n      \"#bfc7d6\",\n      \"#bbc1cc\",\n      \"#b7c0d6\",\n      \"#959eb7\",\n      \"#618bb9\",\n      \"#6384b8\",\n      \"#5a77a8\",\n      \"#8c9cc1\",\n      \"#858fb1\",\n      \"#8398ca\",\n      \"#81a0d4\",\n      \"#7391c8\",\n      \"#6e81be\",\n      \"#6479b3\",\n      \"#adbed3\",\n      \"#a5b8d0\",\n      \"#93b4d7\",\n      \"#8cadd3\",\n      \"#7a9dcb\",\n      \"#658dc6\",\n      \"#5b7ebd\",\n      \"#7291b4\",\n      \"#65769a\",\n      \"#506886\",\n      \"#4a638d\",\n      \"#3d5e8c\",\n      \"#243f6c\",\n      \"#233658\",\n      \"#6e7e99\",\n      \"#4e5e7f\",\n      \"#505d7e\",\n      \"#3f5277\",\n      \"#384c67\",\n      \"#35465e\",\n      \"#2f3e55\",\n      \"#77acc7\",\n      \"#5d96bc\",\n      \"#5ca6ce\",\n      \"#539ccc\",\n      \"#3e7fa5\",\n      \"#4f7ca4\",\n      \"#2a6a8b\",\n      \"#6da9d2\",\n      \"#6ea2d5\",\n      \"#4d91c6\",\n      \"#5879a2\",\n      \"#43628b\",\n      \"#386192\",\n      \"#385d8d\",\n      \"#7ba0c0\",\n      \"#487ab7\",\n      \"#346cb0\",\n      \"#1f5da0\",\n      \"#195190\",\n      \"#1a4c8b\",\n      \"#0f4c81\",\n      \"#4f84c4\",\n      \"#3272af\",\n      \"#0f5f9a\",\n      \"#08589d\",\n      \"#034f84\",\n      \"#1a5091\",\n      \"#00539c\",\n      \"#3850a0\",\n      \"#4960a8\",\n      \"#384883\",\n      \"#203c7f\",\n      \"#273c76\",\n      \"#1e4477\",\n      \"#313d64\",\n      \"#a5b3cc\",\n      \"#9bb7d4\",\n      \"#96b3d2\",\n      \"#899bb8\",\n      \"#79839b\",\n      \"#717f9b\",\n      \"#7181a4\",\n      \"#c9d3dc\",\n      \"#c0ceda\",\n      \"#b5c7d3\",\n      \"#a3b4c4\",\n      \"#9babbb\",\n      \"#677283\",\n      \"#626879\",\n      \"#b0b7be\",\n      \"#84898c\",\n      \"#46515a\",\n      \"#34414e\",\n      \"#2c313d\",\n      \"#323137\",\n      \"#232f36\",\n      \"#c6d2d2\",\n      \"#98a0a5\",\n      \"#8d8f8f\",\n      \"#4a4b4d\",\n      \"#434854\",\n      \"#3c3f4a\",\n      \"#41424a\",\n      \"#363756\",\n      \"#343148\",\n      \"#353a4c\",\n      \"#2b2e43\",\n      \"#2b3042\",\n      \"#2a3244\",\n      \"#363b48\",\n      \"#a3bdd3\",\n      \"#a0bcd0\",\n      \"#8699ab\",\n      \"#8c9dad\",\n      \"#3c586b\",\n      \"#39505c\",\n      \"#3e4f5c\",\n      \"#8fadbd\",\n      \"#798ea4\",\n      \"#66829a\",\n      \"#59728e\",\n      \"#557088\",\n      \"#516b84\",\n      \"#546477\",\n      \"#5c899b\",\n      \"#5c798e\",\n      \"#5487a4\",\n      \"#5b7e98\",\n      \"#46647e\",\n      \"#405d73\",\n      \"#274357\",\n      \"#b5ced4\",\n      \"#a9c0cb\",\n      \"#9ec1cc\",\n      \"#a2b9c2\",\n      \"#879ba3\",\n      \"#748995\",\n      \"#5c6d7c\",\n      \"#a2b6b9\",\n      \"#9eb6b8\",\n      \"#769da6\",\n      \"#829ca5\",\n      \"#86a1a9\",\n      \"#6d8994\",\n      \"#577284\",\n      \"#9dc3d4\",\n      \"#8abad3\",\n      \"#72a8ba\",\n      \"#5cacce\",\n      \"#4ca5c7\",\n      \"#3cadd4\",\n      \"#52a2b4\",\n      \"#5bacc3\",\n      \"#38afcd\",\n      \"#14a3c7\",\n      \"#289dbe\",\n      \"#3686a0\",\n      \"#157ea0\",\n      \"#1478a7\",\n      \"#4abbd5\",\n      \"#00b1d2\",\n      \"#0088b0\",\n      \"#008db9\",\n      \"#0087b6\",\n      \"#007baa\",\n      \"#0074a8\",\n      \"#008cc1\",\n      \"#0084bd\",\n      \"#007eb1\",\n      \"#0086bb\",\n      \"#007bb2\",\n      \"#0077b3\",\n      \"#0075af\",\n      \"#0072b5\",\n      \"#0075b3\",\n      \"#0061a3\",\n      \"#00589b\",\n      \"#005a92\",\n      \"#266691\",\n      \"#305679\",\n      \"#bcd3d5\",\n      \"#aad5db\",\n      \"#b2d4dd\",\n      \"#a5cfd5\",\n      \"#95c0cb\",\n      \"#a1c8db\",\n      \"#87c2d4\",\n      \"#cbdcdf\",\n      \"#c9dcdc\",\n      \"#c8e0e0\",\n      \"#99c1cc\",\n      \"#76afb6\",\n      \"#6f9fa9\",\n      \"#648589\",\n      \"#ccdad7\",\n      \"#c4d6d3\",\n      \"#bfcdcc\",\n      \"#bcc8c6\",\n      \"#b4c8c2\",\n      \"#99aeae\",\n      \"#89acac\",\n      \"#c6e3e1\",\n      \"#b0d3d1\",\n      \"#9cc2c5\",\n      \"#99c5c4\",\n      \"#87b9bc\",\n      \"#6baaae\",\n      \"#60a0a3\",\n      \"#c3dbd4\",\n      \"#b8e2dc\",\n      \"#c3e9e4\",\n      \"#bce3df\",\n      \"#acdfdd\",\n      \"#9fd9d7\",\n      \"#7bc4c4\",\n      \"#cfdfdb\",\n      \"#a8c0bb\",\n      \"#a3ccc9\",\n      \"#649b9e\",\n      \"#5d9ca4\",\n      \"#4c7e86\",\n      \"#426972\",\n      \"#a5bcbb\",\n      \"#76a7ab\",\n      \"#6d9192\",\n      \"#558f91\",\n      \"#478589\",\n      \"#486b67\",\n      \"#567572\",\n      \"#8a9992\",\n      \"#95a69f\",\n      \"#90a8a4\",\n      \"#658c88\",\n      \"#6a8988\",\n      \"#536d70\",\n      \"#4c6969\",\n      \"#8c9fa1\",\n      \"#8a9a9a\",\n      \"#8f9e9d\",\n      \"#7a898f\",\n      \"#6e8082\",\n      \"#697a7e\",\n      \"#5f7278\",\n      \"#8a9691\",\n      \"#7c8c87\",\n      \"#556962\",\n      \"#576664\",\n      \"#55584c\",\n      \"#464e4d\",\n      \"#303d3c\",\n      \"#3a5c6e\",\n      \"#006380\",\n      \"#1f6680\",\n      \"#005871\",\n      \"#0b5369\",\n      \"#18576c\",\n      \"#1f495b\",\n      \"#4e6e81\",\n      \"#35637c\",\n      \"#3b5f78\",\n      \"#325b74\",\n      \"#09577b\",\n      \"#005e7d\",\n      \"#0f4e67\",\n      \"#006175\",\n      \"#1b5366\",\n      \"#2a5c6a\",\n      \"#1f595c\",\n      \"#33565e\",\n      \"#32575d\",\n      \"#274e55\",\n      \"#64a1ad\",\n      \"#70a4b0\",\n      \"#6198ae\",\n      \"#3c7d90\",\n      \"#47788a\",\n      \"#436573\",\n      \"#2d6471\",\n      \"#00a0b0\",\n      \"#008799\",\n      \"#00859c\",\n      \"#00849f\",\n      \"#00819d\",\n      \"#00758f\",\n      \"#00698b\",\n      \"#83c5cd\",\n      \"#58c9d4\",\n      \"#44bbca\",\n      \"#32becc\",\n      \"#00abc0\",\n      \"#009dae\",\n      \"#007a8e\",\n      \"#67bcb3\",\n      \"#53b0ae\",\n      \"#279d9f\",\n      \"#008c96\",\n      \"#008491\",\n      \"#1a7f8e\",\n      \"#097988\",\n      \"#81d7d3\",\n      \"#00aaa9\",\n      \"#009499\",\n      \"#008786\",\n      \"#008583\",\n      \"#008381\",\n      \"#008684\",\n      \"#45b5aa\",\n      \"#3ab0a2\",\n      \"#4d9e9a\",\n      \"#30a299\",\n      \"#108780\",\n      \"#007c7a\",\n      \"#006d70\",\n      \"#00af9f\",\n      \"#00af9d\",\n      \"#008e80\",\n      \"#009b8c\",\n      \"#009288\",\n      \"#007f7c\",\n      \"#00736c\",\n      \"#73a89e\",\n      \"#619187\",\n      \"#4f7c74\",\n      \"#427d6d\",\n      \"#29685f\",\n      \"#29675c\",\n      \"#035453\",\n      \"#40a48e\",\n      \"#149c88\",\n      \"#007d69\",\n      \"#0a6f69\",\n      \"#226c63\",\n      \"#00675b\",\n      \"#005f56\",\n      \"#6da29e\",\n      \"#599f99\",\n      \"#549f98\",\n      \"#379190\",\n      \"#358082\",\n      \"#20706f\",\n      \"#316c6b\",\n      \"#36716f\",\n      \"#005b5d\",\n      \"#006361\",\n      \"#00656e\",\n      \"#00656b\",\n      \"#00585e\",\n      \"#18454b\",\n      \"#4e6866\",\n      \"#405e5c\",\n      \"#395551\",\n      \"#335959\",\n      \"#255958\",\n      \"#264a48\",\n      \"#203b3d\",\n      \"#d2e8e0\",\n      \"#c3ddd6\",\n      \"#c0dccd\",\n      \"#8ec5b6\",\n      \"#81c3b4\",\n      \"#76c1b2\",\n      \"#7bb5a3\",\n      \"#bae1d3\",\n      \"#afddcc\",\n      \"#87d7be\",\n      \"#7accb8\",\n      \"#77cfb7\",\n      \"#55c6a9\",\n      \"#64bfa4\",\n      \"#c7e5df\",\n      \"#bae5d6\",\n      \"#a1d7c9\",\n      \"#96dfce\",\n      \"#87d8c3\",\n      \"#58c8b6\",\n      \"#56beab\",\n      \"#60c9b3\",\n      \"#4bc3a8\",\n      \"#00b89f\",\n      \"#00aa92\",\n      \"#00a28a\",\n      \"#008778\",\n      \"#009276\",\n      \"#00b694\",\n      \"#00a78b\",\n      \"#009e82\",\n      \"#009473\",\n      \"#00846b\",\n      \"#006e5b\",\n      \"#006b54\",\n      \"#a9bdb1\",\n      \"#a3b5a6\",\n      \"#8c9c92\",\n      \"#86a293\",\n      \"#7e9285\",\n      \"#818f84\",\n      \"#616f65\",\n      \"#589f7e\",\n      \"#5b7961\",\n      \"#5b7763\",\n      \"#3e6f58\",\n      \"#4f6b58\",\n      \"#325b51\",\n      \"#334d41\",\n      \"#717e6f\",\n      \"#53665c\",\n      \"#578270\",\n      \"#3a725f\",\n      \"#11574a\",\n      \"#335749\",\n      \"#314f40\",\n      \"#729b8b\",\n      \"#3e6257\",\n      \"#355048\",\n      \"#3e524b\",\n      \"#3c4e47\",\n      \"#35463d\",\n      \"#324241\",\n      \"#807d6f\",\n      \"#6e6e5c\",\n      \"#50574c\",\n      \"#3a4032\",\n      \"#37413a\",\n      \"#434237\",\n      \"#36362d\",\n      \"#b8ccba\",\n      \"#c1ccc2\",\n      \"#bfc8c3\",\n      \"#d1d5d0\",\n      \"#bac2ba\",\n      \"#b2b6ac\",\n      \"#a5b2aa\",\n      \"#d8e3d7\",\n      \"#dde3d5\",\n      \"#d6dec9\",\n      \"#cad3c1\",\n      \"#c5ccc0\",\n      \"#b7c2b2\",\n      \"#a7ae9e\",\n      \"#e0e6d7\",\n      \"#cbcebe\",\n      \"#c4d1c2\",\n      \"#c1cec1\",\n      \"#aac0ad\",\n      \"#959889\",\n      \"#888d82\",\n      \"#cee1d4\",\n      \"#bcd9c8\",\n      \"#b5cbbb\",\n      \"#adc3b4\",\n      \"#b2cfbe\",\n      \"#9bc2b1\",\n      \"#9bbea9\",\n      \"#cfdbd1\",\n      \"#dce4d7\",\n      \"#aacebc\",\n      \"#aaccb9\",\n      \"#bccab3\",\n      \"#a8bba2\",\n      \"#709a89\",\n      \"#8aa282\",\n      \"#879f84\",\n      \"#7a9b78\",\n      \"#7d956d\",\n      \"#6f8c69\",\n      \"#748c69\",\n      \"#547053\",\n      \"#768a75\",\n      \"#788f74\",\n      \"#739072\",\n      \"#6f8d6a\",\n      \"#658e67\",\n      \"#61845b\",\n      \"#558367\",\n      \"#769358\",\n      \"#6b8d53\",\n      \"#699158\",\n      \"#53713d\",\n      \"#495e35\",\n      \"#4b6d41\",\n      \"#59754d\",\n      \"#7e9b76\",\n      \"#3c824e\",\n      \"#3d7245\",\n      \"#477050\",\n      \"#5f7355\",\n      \"#6f7755\",\n      \"#37503d\",\n      \"#616652\",\n      \"#525f48\",\n      \"#4a5335\",\n      \"#545a3e\",\n      \"#414f3c\",\n      \"#414832\",\n      \"#394034\",\n      \"#d2e7ca\",\n      \"#bed3bb\",\n      \"#b4d3b2\",\n      \"#97c1a1\",\n      \"#9fc09c\",\n      \"#8bba94\",\n      \"#77a276\",\n      \"#a0daa9\",\n      \"#8bc28c\",\n      \"#7cb08a\",\n      \"#7cb083\",\n      \"#82b185\",\n      \"#7cb68e\",\n      \"#76b583\",\n      \"#7fbb9e\",\n      \"#70a38d\",\n      \"#4f9e81\",\n      \"#2ea785\",\n      \"#0f9d76\",\n      \"#008c69\",\n      \"#008763\",\n      \"#6bcd9c\",\n      \"#66bc91\",\n      \"#60b892\",\n      \"#3aa278\",\n      \"#4b9b69\",\n      \"#378661\",\n      \"#3a795e\",\n      \"#00a776\",\n      \"#00a170\",\n      \"#009e6d\",\n      \"#009b75\",\n      \"#007d60\",\n      \"#007558\",\n      \"#12674a\",\n      \"#bfd1b3\",\n      \"#bfd1ad\",\n      \"#a7c796\",\n      \"#9ebc97\",\n      \"#92af88\",\n      \"#91ac80\",\n      \"#759465\",\n      \"#b9eab3\",\n      \"#a9d39e\",\n      \"#a3c893\",\n      \"#7bb369\",\n      \"#79b465\",\n      \"#86a96f\",\n      \"#89a06b\",\n      \"#b2e79f\",\n      \"#9fc131\",\n      \"#7ec845\",\n      \"#79c753\",\n      \"#39a845\",\n      \"#44883c\",\n      \"#476a30\",\n      \"#7ed37f\",\n      \"#6dce87\",\n      \"#2bae66\",\n      \"#45be76\",\n      \"#6fa26b\",\n      \"#699e6d\",\n      \"#487d49\",\n      \"#4db560\",\n      \"#55a860\",\n      \"#339c5e\",\n      \"#009b5c\",\n      \"#008c45\",\n      \"#008658\",\n      \"#1f7349\",\n      \"#b0c965\",\n      \"#97bc62\",\n      \"#88b04b\",\n      \"#75a14f\",\n      \"#819548\",\n      \"#739957\",\n      \"#7b7f32\",\n      \"#a1ca7b\",\n      \"#9cad60\",\n      \"#9faf6c\",\n      \"#8db051\",\n      \"#a0ac4f\",\n      \"#9bb53e\",\n      \"#7aab55\",\n      \"#c6ec7a\",\n      \"#c9d77e\",\n      \"#c3d363\",\n      \"#c4bf71\",\n      \"#b5bf50\",\n      \"#b5cc39\",\n      \"#c0d725\",\n      \"#dfef87\",\n      \"#d3d95f\",\n      \"#d5d717\",\n      \"#b8af23\",\n      \"#b5b644\",\n      \"#c7b63c\",\n      \"#b9a023\",\n      \"#d7e8bc\",\n      \"#cfe09d\",\n      \"#cdd78a\",\n      \"#bed38e\",\n      \"#afcb80\",\n      \"#a3c57d\",\n      \"#b0b487\",\n      \"#e7eacb\",\n      \"#ecead0\",\n      \"#e9eac8\",\n      \"#f1ecca\",\n      \"#dcd8a8\",\n      \"#d3cca3\",\n      \"#cbce91\",\n      \"#e1e3a9\",\n      \"#dfde9b\",\n      \"#e3eaa5\",\n      \"#dfe69f\",\n      \"#e7df99\",\n      \"#e1d590\",\n      \"#e5e790\",\n      \"#d5d593\",\n      \"#cfc486\",\n      \"#c5cc7b\",\n      \"#babc72\",\n      \"#b0b454\",\n      \"#b7b17a\",\n      \"#b3b17b\",\n      \"#afaf5e\",\n      \"#af9841\",\n      \"#a3a04e\",\n      \"#a09d59\",\n      \"#9a803a\",\n      \"#927b3c\",\n      \"#857946\",\n      \"#a39264\",\n      \"#998456\",\n      \"#9a8b4f\",\n      \"#9c7e41\",\n      \"#997b38\",\n      \"#805d24\",\n      \"#7a6332\",\n      \"#c2cbb4\",\n      \"#c5cfb6\",\n      \"#d0d3b7\",\n      \"#b5c1a5\",\n      \"#adbba1\",\n      \"#a8b197\",\n      \"#a1ad92\",\n      \"#d3dec4\",\n      \"#cadea5\",\n      \"#d4dbb2\",\n      \"#cbd5b1\",\n      \"#c3d3a8\",\n      \"#c0cba1\",\n      \"#b4c79c\",\n      \"#c5cf98\",\n      \"#c2c18d\",\n      \"#b4bb85\",\n      \"#a3a969\",\n      \"#909b4c\",\n      \"#9aa067\",\n      \"#8d8b55\",\n      \"#849161\",\n      \"#77824a\",\n      \"#81894e\",\n      \"#757a4e\",\n      \"#6a6f34\",\n      \"#5e6737\",\n      \"#595f34\",\n      \"#a4ae77\",\n      \"#91946e\",\n      \"#818455\",\n      \"#80856d\",\n      \"#6e7153\",\n      \"#656344\",\n      \"#666b54\",\n      \"#b6ba99\",\n      \"#b5ad88\",\n      \"#b2ac88\",\n      \"#a49a79\",\n      \"#a49775\",\n      \"#817a65\",\n      \"#746c57\",\n      \"#999b85\",\n      \"#938b78\",\n      \"#a0987c\",\n      \"#a39f86\",\n      \"#858961\",\n      \"#817a60\",\n      \"#756d47\",\n      \"#928e64\",\n      \"#8e855f\",\n      \"#847a59\",\n      \"#646a45\",\n      \"#71643e\",\n      \"#676232\",\n      \"#67592a\",\n      \"#bab696\",\n      \"#8c7c61\",\n      \"#7c6e4f\",\n      \"#7a643f\",\n      \"#75663e\",\n      \"#63563b\",\n      \"#574d35\",\n      \"#afab97\",\n      \"#aba798\",\n      \"#646049\",\n      \"#646356\",\n      \"#585442\",\n      \"#535040\",\n      \"#545144\",\n      \"#a7a19e\",\n      \"#9f8d89\",\n      \"#847a75\",\n      \"#6d625b\",\n      \"#685c53\",\n      \"#807669\",\n      \"#9a9186\",\n      \"#a49887\",\n      \"#928475\",\n      \"#8d7e71\",\n      \"#b6a893\",\n      \"#b7a793\",\n      \"#937b6a\",\n      \"#816d5e\",\n      \"#ae997d\",\n      \"#b09a77\",\n      \"#ceb899\",\n      \"#bca483\",\n      \"#977c61\",\n      \"#8b6a4f\",\n      \"#5f4c40\",\n      \"#f3eac3\",\n      \"#e7d391\",\n      \"#face6d\",\n      \"#f4e3b5\",\n      \"#f6e3b4\",\n      \"#ebcf89\",\n      \"#e4cfb6\",\n      \"#f6e199\",\n      \"#eee78e\",\n      \"#f8dc6c\",\n      \"#f9d857\",\n      \"#f4bf3a\",\n      \"#fbc85f\",\n      \"#c87629\",\n      \"#a05c17\",\n      \"#df7500\",\n      \"#c16512\",\n      \"#bb5c14\",\n      \"#a15325\",\n      \"#944a1f\",\n      \"#e86800\",\n      \"#e95c20\",\n      \"#864c24\",\n      \"#b45422\",\n      \"#9b4722\",\n      \"#9e4624\",\n      \"#a23c26\",\n      \"#e8703a\",\n      \"#e2552c\",\n      \"#c34121\",\n      \"#dd4124\",\n      \"#ca3422\",\n      \"#d15837\",\n      \"#a2242f\",\n      \"#aa0a27\",\n      \"#a11729\",\n      \"#aa182b\",\n      \"#9d202f\",\n      \"#941e32\",\n      \"#7d2027\",\n      \"#752329\",\n      \"#6a2e2a\",\n      \"#77202f\",\n      \"#6a282c\",\n      \"#6c2831\",\n      \"#64242e\",\n      \"#f2cfdc\",\n      \"#f2c1d1\",\n      \"#a5958f\",\n      \"#b98391\",\n      \"#a66e7a\",\n      \"#b61c50\",\n      \"#a52350\",\n      \"#a22452\",\n      \"#cb3373\",\n      \"#a32857\",\n      \"#9469a2\",\n      \"#9d7bb0\",\n      \"#9f86aa\",\n      \"#46295a\",\n      \"#563474\",\n      \"#634878\",\n      \"#5f4e72\",\n      \"#a9adc2\",\n      \"#9a9eb3\",\n      \"#81839a\",\n      \"#717388\",\n      \"#2a293e\",\n      \"#2c2a33\",\n      \"#2a2a35\",\n      \"#96a3c7\",\n      \"#849bcc\",\n      \"#b7c0d7\",\n      \"#9ba9ca\",\n      \"#262934\",\n      \"#282d3c\",\n      \"#262b37\",\n      \"#bfcad6\",\n      \"#bdc6dc\",\n      \"#9eb4d3\",\n      \"#819ac1\",\n      \"#4a556b\",\n      \"#253668\",\n      \"#323441\",\n      \"#274374\",\n      \"#30658e\",\n      \"#282b34\",\n      \"#2f3441\",\n      \"#2c333e\",\n      \"#272f38\",\n      \"#2d3036\",\n      \"#b5cedf\",\n      \"#a5c5d9\",\n      \"#4b5b6e\",\n      \"#2c4053\",\n      \"#123955\",\n      \"#005780\",\n      \"#203e4a\",\n      \"#a9cada\",\n      \"#78bdd4\",\n      \"#88c3d0\",\n      \"#61aab1\",\n      \"#85ced1\",\n      \"#12403c\",\n      \"#23312d\",\n      \"#d5d5d8\",\n      \"#babcc0\",\n      \"#929090\",\n      \"#807d7f\",\n      \"#767275\",\n      \"#524d50\",\n      \"#4d4b4f\",\n      \"#a19fa5\",\n      \"#7f7c81\",\n      \"#7e7d88\",\n      \"#787376\",\n      \"#5e5b60\",\n      \"#5c5658\",\n      \"#3b3b48\",\n      \"#98979a\",\n      \"#92949b\",\n      \"#7f8793\",\n      \"#585e6f\",\n      \"#46444c\",\n      \"#66676d\",\n      \"#4e545b\",\n      \"#58646d\",\n      \"#4e5055\",\n      \"#48464a\",\n      \"#434447\",\n      \"#9c9b98\",\n      \"#73706f\",\n      \"#94908b\",\n      \"#a3a9a6\",\n      \"#6b7169\",\n      \"#43544b\",\n      \"#213631\",\n      \"#264e36\",\n      \"#007844\",\n      \"#2e3d30\",\n      \"#b5c38e\",\n      \"#5b5a41\",\n      \"#444940\",\n      \"#3f352f\",\n      \"#433937\",\n      \"#392d2b\",\n      \"#382e2d\",\n      \"#34292a\",\n      \"#2e272a\",\n      \"#363031\",\n      \"#2b2929\",\n      \"#2a2b2d\",\n      \"#efebe7\",\n      \"#ede6de\",\n      \"#f0ead6\",\n      \"#efe0cd\",\n      \"#f6ebc8\",\n      \"#f3eee7\",\n      \"#f0ede5\",\n      \"#ece99b\",\n      \"#f1e6de\",\n      \"#edf1fe\",\n      \"#f0efe2\",\n      \"#e8e3d9\",\n      \"#d7cfbb\",\n      \"#ebdf67\",\n      \"#f3e779\",\n      \"#f5d6c6\",\n      \"#f7d1d4\",\n      \"#dfcdc6\",\n      \"#f8e0e7\",\n      \"#d6cebe\",\n      \"#c0db3a\",\n      \"#f3dd3e\",\n      \"#ead94e\",\n      \"#ccdb1e\",\n      \"#fed450\",\n      \"#fed55d\",\n      \"#d2c29d\",\n      \"#e7aa56\",\n      \"#c7bba4\",\n      \"#f5b895\",\n      \"#e2bdb3\",\n      \"#dacab7\",\n      \"#f7cdc7\",\n      \"#f7cac9\",\n      \"#ebced5\",\n      \"#f7cee0\",\n      \"#c6c5c6\",\n      \"#c3c6c8\",\n      \"#91dce8\",\n      \"#98ddde\",\n      \"#abd3db\",\n      \"#badf30\",\n      \"#d8ae47\",\n      \"#fbaa4c\",\n      \"#c0ac92\",\n      \"#f9aa7d\",\n      \"#cfb095\",\n      \"#d4bab6\",\n      \"#b1aab3\",\n      \"#9fa9be\",\n      \"#b9babd\",\n      \"#92b6d5\",\n      \"#afb1b4\",\n      \"#98bfca\",\n      \"#79b5db\",\n      \"#83c2cd\",\n      \"#95dee3\",\n      \"#82c2c7\",\n      \"#d69c2f\",\n      \"#bfa58a\",\n      \"#b18f6a\",\n      \"#d9922e\",\n      \"#d7942d\",\n      \"#cca580\",\n      \"#f4963a\",\n      \"#fea166\",\n      \"#fe8c18\",\n      \"#fe840e\",\n      \"#fe7e03\",\n      \"#c0916c\",\n      \"#cc7357\",\n      \"#bd8c66\",\n      \"#eb9687\",\n      \"#b99bc5\",\n      \"#b09fca\",\n      \"#b3a0c9\",\n      \"#91a8d0\",\n      \"#5dafce\",\n      \"#9a9738\",\n      \"#9c9a40\",\n      \"#aba44d\",\n      \"#ada396\",\n      \"#d27f63\",\n      \"#c5733d\",\n      \"#c57644\",\n      \"#f96714\",\n      \"#a46f44\",\n      \"#f96531\",\n      \"#fc642d\",\n      \"#f77464\",\n      \"#f7786b\",\n      \"#98878c\",\n      \"#9f90c1\",\n      \"#9896a4\",\n      \"#5d81bb\",\n      \"#988c75\",\n      \"#b1832f\",\n      \"#93592b\",\n      \"#918579\",\n      \"#948a7a\",\n      \"#8d7960\",\n      \"#8b593e\",\n      \"#c46215\",\n      \"#897560\",\n      \"#b95b3f\",\n      \"#f45520\",\n      \"#be4b3b\",\n      \"#725f69\",\n      \"#ce5b78\",\n      \"#ce3175\",\n      \"#988088\",\n      \"#b76ba3\",\n      \"#9879a2\",\n      \"#9479af\",\n      \"#9787bb\",\n      \"#838487\",\n      \"#8895c5\",\n      \"#707bb4\",\n      \"#848182\",\n      \"#4c6a92\",\n      \"#5a789a\",\n      \"#5d89b3\",\n      \"#5480ac\",\n      \"#007cb7\",\n      \"#3183a0\",\n      \"#0084a1\",\n      \"#797b3a\",\n      \"#5a7247\",\n      \"#65663f\",\n      \"#4e632c\",\n      \"#716a4d\",\n      \"#684832\",\n      \"#ab6819\",\n      \"#a86217\",\n      \"#935529\",\n      \"#783937\",\n      \"#8e3c36\",\n      \"#675657\",\n      \"#73362a\",\n      \"#bc322c\",\n      \"#b4262a\",\n      \"#b61032\",\n      \"#ba0b32\",\n      \"#b91228\",\n      \"#735b6a\",\n      \"#6f5965\",\n      \"#b2103c\",\n      \"#c01352\",\n      \"#c62168\",\n      \"#7b4368\",\n      \"#8e4483\",\n      \"#632a60\",\n      \"#624076\",\n      \"#936a98\",\n      \"#6f4685\",\n      \"#7d5d99\",\n      \"#5a4e8f\",\n      \"#615c60\",\n      \"#4d587a\",\n      \"#4e6482\",\n      \"#5b609e\",\n      \"#2d62a3\",\n      \"#006ca9\",\n      \"#007290\",\n      \"#0078a7\",\n      \"#006b7e\",\n      \"#006865\",\n      \"#615e5f\",\n      \"#006e51\",\n      \"#49494d\",\n      \"#5e5749\",\n      \"#46483c\",\n      \"#5f5b4c\",\n      \"#5d5348\",\n      \"#3c2d2e\",\n      \"#5c3e35\",\n      \"#543b35\",\n      \"#5d4236\",\n      \"#634235\",\n      \"#5a3e36\",\n      \"#4a342e\",\n      \"#6e362c\",\n      \"#56352d\",\n      \"#66352b\",\n      \"#72262c\",\n      \"#7b3539\",\n      \"#4d233d\",\n      \"#61224a\",\n      \"#47243b\",\n      \"#6d4773\",\n      \"#3e285c\",\n      \"#27293d\",\n      \"#3a363b\",\n      \"#26262a\",\n      \"#4d4b50\",\n      \"#434452\",\n      \"#2b272b\",\n      \"#223a5e\",\n      \"#35435a\",\n      \"#0e3a53\",\n      \"#123850\",\n      \"#004b8d\",\n      \"#155187\",\n      \"#2a4b7c\",\n      \"#0f3b57\",\n      \"#293b4d\",\n      \"#29495c\",\n      \"#00637c\",\n      \"#005265\",\n      \"#254445\",\n      \"#184a45\",\n      \"#15463e\"\n  ]\n}\n","<script context=\"module\">\n\timport Pantone from \"./pantone-colors.js\"\n\t\n\tfunction RGBToHSL([r, g, b]) {\n\t\t// Make r, g, and b fractions of 1\n\t\tr /= 255;\n\t\tg /= 255;\n\t\tb /= 255;\n\n\t\t// Find greatest and smallest channel values\n\t\tlet cmin = Math.min(r,g,b),\n\t\t\t\tcmax = Math.max(r,g,b),\n\t\t\t\tdelta = cmax - cmin,\n\t\t\t\th = 0,\n\t\t\t\ts = 0,\n\t\t\t\tl = 0;\n\t\t\n\t\tif (delta == 0)\n\t\t\th = 0;\n\t\t// Red is max\n\t\telse if (cmax == r)\n\t\t\th = ((g - b) / delta) % 6;\n\t\t// Green is max\n\t\telse if (cmax == g)\n\t\t\th = (b - r) / delta + 2;\n\t\t// Blue is max\n\t\telse\n\t\t\th = (r - g) / delta + 4;\n\n\t\th = Math.round(h * 60);\n\n\t\t// Make negative hues positive behind 360�\n\t\tif (h < 0)\n\t\t\t\th += 360;\n\t\t\n\t\t// Calculate lightness\n\t\tl = (cmax + cmin) / 2;\n\n\t\t// Calculate saturation\n\t\ts = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n\t\t// Multiply l and s by 100\n\t\ts = +(s * 100).toFixed(1);\n\t\tl = +(l * 100).toFixed(1);\n\n\t\treturn {h, s, l};\n\t}\n\t\n\tPantone.rgb = Pantone.values.map(rgb => rgb.split(\"#\")[1]\n\t\t\t\t\t\t\t\t\t\t\t .match(/.{1,2}/g)\n\t\t\t\t\t\t\t\t\t\t\t .map(val => parseInt(val, 16)))\n\tPantone.hsl = Pantone.rgb.map(color => RGBToHSL(color))\n\t\n\tArray.min = function( array ){\n\t\treturn Math.min.apply( Math, array );\n\t};\n</script>\n\n<script>\n\timport {rgbStore} from './colorStore.js'\n\t\n\tlet pantone = {\n\t\t\tname: 'unknown',\n\t\t\thsl: {},\n\t\t\trgb: {}\n\t}\n\tlet r, g, b;\n\trgbStore.r.subscribe(val => r = val)\n\trgbStore.g.subscribe(val => g = val)\n\trgbStore.b.subscribe(val => b = val)\n\t$: pantone = nearestPantone(r, g, b)\n\n\tfunction nearestPantone(r, g, b) {\n\t\tlet nearestArr = Pantone.rgb.map(color => color\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.reduce((err, val, i) => err += Math.abs(val - [r, g, b][i]), 0))\n\t\tlet nearest = nearestArr.reduce((min, val, i) => {\n\t\t\treturn (min.val < val) ? min : {val, i}}, {val: nearestArr[0], index: 0})\n\n\t\treturn {\n\t\t\tname: Pantone.names[nearest.i],\n\t\t\thsl: Pantone.hsl[nearest.i],\n\t\t\trgb: Pantone.rgb[nearest.i]\n\t\t}\n\t}\n\t\n\tfunction copyText(e) {\n\t\tlet text = e.target.innerText\n\t\tlet textArea = document.querySelector('.hidden-textarea')\n\t\ttextArea.setAttribute('value', text)\n\t\ttextArea.innerText = text\n\t\ttextArea.select()\n\t\tdocument.execCommand('copy')\n\t\te.target.focus()\n\t}\n</script>\n\n<style>\n\tsection {\n\t\tbox-sizing: border-box;\n\t\tbackground: rgb(var(--primary-rgb));\n\t\tcolor: var(--contrast);\n\t\twidth: 70vmin;\n\t\tpadding: 2vmin 4vmin;\n\t\tborder-radius: 1vmin;\n\t\ttransition: background .12s ease-in-out;\n\t}\n\t\n\tsection :first-child {\n\t\tmargin-top: 1vmin;\n\t}\n\t\n\tsection :last-child {\n\t\tmargin-bottom: 1vmin;\n\t}\n\t\n\th3 {\n\t\tmargin: .3em 0;\n\t\tborder-bottom: solid 1px;\n\t}\n\t\n\tp {\n\t\tposition: relative;\n\t\tpadding: .2em;\n\t}\n\t\n\tp:focus {\n\t\tbackground: var(--contrast);\n\t\tcolor: rgb(var(--primary-rgb));\n\t\tborder: none;\n\t\toutline: none;\n\t}\n\t\n\tp:focus::after {\n\t\tcontent: '+';\n\t\tfont-weight: bold;\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\t--og-transform: translate(0, calc(-50% - .1em));\n\t\ttransform: var(--og-transform) scale(1);\n\t\tright: .5em;\n\t\tcolor: rgb(var(--primary-rgb));\n\t\tvertical-align: middle;\n\t\ttransform-origin: 53% 55%;\n\t\tanimation: wiggle-scale .5s ease-in-out forwards;\n\t}\n\t\n\t@keyframes wiggle-scale {\n\t\t0% {\n\t\t\ttransform: var(--og-transform) scale(1) rotate(0);\n\t\t}\n\t\t20% {\n\t\t\ttransform: var(--og-transform) scale(0.9) rotate(-15deg);\n\t\t}\t\t\n\t\t75% {\n\t\t\ttransform: var(--og-transform) scale(1.4) rotate(60deg);\n\t\t}\t\t\n\t\t100% {\n\t\t\ttransform: var(--og-transform) scale(1) rotate(90deg);\n\t\t}\n\t}\n\t\t\n\t.hidden-textarea {\n\t\tposition: fixed;\n\t\tleft: 100%;\n\t\twidth: 0;\n\t\theight: 0;\n\t\topacity: 0;\n\t}\n</style>\n\n<section style=\"--primary-hsl: {pantone.hsl};\n\t\t\t\t\t\t\t\t--primary-rgb: {pantone.rgb.join(', ')};\n\t\t\t\t\t\t\t\t--contrast: {(pantone.hsl.l > 50) ? '#222' : 'white'};\">\n\t<small>Nearest Pantone</small>\n\t<h3>{pantone.name}</h3>\n\t<div class=\"swatch\"></div>\n\t<p tabindex=0 on:click={copyText}>hsl({pantone.hsl.h}deg, {pantone.hsl.s}%, {pantone.hsl.l}%)</p>\n\t<p tabindex=0 on:click={copyText}>rgb({pantone.rgb[0]}, {pantone.rgb[1]}, {pantone.rgb[2]})</p>\n</section>\n<textarea class=\"hidden-textarea\"></textarea>","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["toTwoDecimals","clamp","hslToHSB"],"mappings":";;;;;IAAA,SAAS,IAAI,GAAG,GAAG;AACnB,IAUA,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAAS,GAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;AACD,AA6FA;IACA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;AACD,IAqBA,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;AACD,IAgBA,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;AACD,IAGA,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;AACD,IAcA,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC;IACA,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;AACD,IAgCA,SAAS,SAAS,CAAC,KAAK,EAAE;IAC1B,IAAI,OAAO,KAAK,KAAK,EAAE,GAAG,SAAS,GAAG,CAAC,KAAK,CAAC;IAC7C,CAAC;AACD,IAOA,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;AACD,IAwBA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE;IAC9B,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI;IAC1B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,CAAC;AACD,IAQA,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;AACD,AAuLA;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;AACD,AA8CA;IACA,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,IACA,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;AACD,IAIA,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;AACD,IAGA,SAAS,KAAK,GAAG;IACjB,IAAI,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACrC,IAAI,GAAG;IACP;IACA;IACA,QAAQ,OAAO,gBAAgB,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,SAAS,GAAG,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACvD,YAAY,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7C,YAAY,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,EAAE;IACrB,QAAQ,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACxC,QAAQ,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC;IACxB,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;AACD,IAcA,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,CAAC;IACX,SAAS,YAAY,GAAG;IACxB,IAAI,MAAM,GAAG;IACb,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,MAAM;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IACnB,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC/B,YAAY,OAAO;IACnB,QAAQ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;IAC5B,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;AACD,IAmhBA,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;IACpD,IAAI,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC1E,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC/B;IACA,IAAI,mBAAmB,CAAC,MAAM;IAC9B,QAAQ,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACrE,QAAQ,IAAI,UAAU,EAAE;IACxB,YAAY,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAC/C,SAAS;IACT,aAAa;IACb;IACA;IACA,YAAY,OAAO,CAAC,cAAc,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnC,KAAK,CAAC,CAAC;IACP,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE;IAC/B,QAAQ,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IACzC,QAAQ,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC3C;IACA;IACA,QAAQ,SAAS,CAAC,EAAE,CAAC,UAAU,GAAG,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC/D,QAAQ,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IAC9B,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,GAAG,EAAE;IACpC,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,EAAE;IAC7B,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,GAAG,YAAY,EAAE,CAAC;IAC5C,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;IACnC,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,UAAU,EAAE;IACpF,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;IACtC,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,IAAI;IACjB;IACA,QAAQ,KAAK,EAAE,UAAU;IACzB,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;IAC7E;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK,EAAE,IAAI;IACnB,KAAK,CAAC;IACN,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,EAAE,KAAK,KAAK;IACrD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,EAAE;IACvE,gBAAgB,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;IACjC,oBAAoB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;IACzC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC/C,aAAa;IACb,SAAS,CAAC;IACV,UAAU,KAAK,CAAC;IAChB,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAC7B;IACA,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACpD,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC5B,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IACnE,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;AACD,IAoCA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,GAAG;IACX;IACA,KAAK;IACL,CAAC;IACD,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,CAAC;;IC5yCD;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IAChC,IAAI,OAAO;IACX,QAAQ,SAAS,EAAE,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS;IACnD,KAAK,CAAC;IACN,CAAC;IACD;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI,EAAE;IACvC,IAAI,IAAI,IAAI,CAAC;IACb,IAAI,MAAM,WAAW,GAAG,EAAE,CAAC;IAC3B,IAAI,SAAS,GAAG,CAAC,SAAS,EAAE;IAC5B,QAAQ,IAAI,cAAc,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;IAC9C,YAAY,KAAK,GAAG,SAAS,CAAC;IAC9B,YAAY,IAAI,CAAC,IAAI,EAAE;IACvB,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/C,YAAY,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACpD,SAAS;IACT,KAAK;IACL,IAAI,SAAS,MAAM,CAAC,EAAE,EAAE;IACxB,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,KAAK;IACL,IAAI,SAAS,SAAS,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;IAC/C,QAAQ,MAAM,UAAU,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC7C,QAAQ,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrC,QAAQ,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;IACtC,YAAY,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;IACtC,SAAS;IACT,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1D,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;IAC9B,gBAAgB,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;IAC1C,gBAAgB,IAAI,EAAE,CAAC;IACvB,gBAAgB,IAAI,GAAG,IAAI,CAAC;IAC5B,aAAa;IACb,SAAS,CAAC;IACV,KAAK;IACL,IAAI,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;IACtC,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,CAAC,MAAM,EAAE,EAAE,EAAE,aAAa,EAAE;IAC5C,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1C,IAAI,MAAM,YAAY,GAAG,MAAM;IAC/B,UAAU,CAAC,MAAM,CAAC;IAClB,UAAU,MAAM,CAAC;IACjB,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/B,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC;IAC5B,IAAI,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK;IACnD,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC;IAC3B,QAAQ,MAAM,MAAM,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,OAAO,GAAG,IAAI,CAAC;IAC3B,QAAQ,MAAM,IAAI,GAAG,MAAM;IAC3B,YAAY,IAAI,OAAO,EAAE;IACzB,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,OAAO,EAAE,CAAC;IACtB,YAAY,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;IAChE,YAAY,IAAI,IAAI,EAAE;IACtB,gBAAgB,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5B,aAAa;IACb,iBAAiB;IACjB,gBAAgB,OAAO,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAC9D,aAAa;IACb,SAAS,CAAC;IACV,QAAQ,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,KAAK,CAAC,SAAS,CAAC,CAAC,KAAK,KAAK;IACxF,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC9B,YAAY,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,YAAY,IAAI,MAAM,EAAE;IACxB,gBAAgB,IAAI,EAAE,CAAC;IACvB,aAAa;IACb,SAAS,EAAE,MAAM;IACjB,YAAY,OAAO,CAAC,YAAY,CAAC,CAAC;IAClC,YAAY,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAChC,SAAS,CAAC,CAAC,CAAC;IACZ,QAAQ,MAAM,GAAG,IAAI,CAAC;IACtB,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,OAAO,SAAS,IAAI,GAAG;IAC/B,YAAY,OAAO,CAAC,aAAa,CAAC,CAAC;IACnC,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS,CAAC;IACV,KAAK,CAAC,CAAC;IACP,IAAI,OAAO;IACX,QAAQ,SAAS,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;IAC1C,YAAY,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1C,YAAY,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IACjE,YAAY,OAAO,MAAM;IACzB,gBAAgB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,gBAAgB,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;IAClC,oBAAoB,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAClD,iBAAiB;IACjB,gBAAgB,WAAW,EAAE,CAAC;IAC9B,aAAa,CAAC;IACd,SAAS;IACT,KAAK,CAAC;IACN,CAAC;;IClHM,IAAI,QAAQ,GAAG;IACtB,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC;IAChB,EAAC;;IAED,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,SAAQ;;AAExB,IAAO,IAAI,QAAQ,GAAG;IACtB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,EAAC;;IAED,SAAS,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC9B,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAClD,CAAC;;IAED,SAAS,aAAa,CAAC,GAAG,EAAE;IAC5B,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;IACnC,CAAC;IACD;IACA,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;IACpC,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC/B,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;;IAErC,CAAC,IAAI,KAAK,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,CAAC,IAAI,MAAM,GAAG,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAC;;IAE/D,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG;IACf,KAAK,CAAC,EAAE,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC;IACjC,KAAK,CAAC,EAAE,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;AAED,IAAO,IAAI,QAAQ,GAAG;IACtB,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,EAAC;;IAED,SAAS,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC7B,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC3B,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC3B,CAAC,CAAC,GAAG,CAAC,GAAG,IAAG;;IAEZ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACtC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACd,GAAG,CAAC,GAAG,CAAC;IACR,GAAG,CAAC,GAAG,CAAC;IACR,GAAG,CAAC,GAAG,EAAC;;IAER,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE;IACvB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IAChC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IACjC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IACjC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IACjC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IACjC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC;IACrB,EAAE;IACF,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAC;IAC9B,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAC;IAC9B,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAC;;IAE9B,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjB,CAAC;;ICxEM,IAAIA,eAAa,GAAG,CAAC,GAAG,KAAK;IACpC,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;IACnC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCCgBqE,SAAS;;oCACD,SAAS;;oCACT,SAAS;;;;;;;;;;;;;;;;0BAFhC,GAAG;;;;;;;;0BACF,UAAU;;;;;;;;0BACV,UAAU;;;;;;2CAFX,GAAG;kDACF,UAAU;kDACV,UAAU;;;;;;;;;;;;;;;;;;;KAjBjE,IAAI,GAAG,EAAE,UAAU,EAAE,WAAU;KAC/B,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,GAAG,GAAG,iDAAG,EAAC;KACtC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,UAAU,GAAG,+DAAG,EAAC;KAC7C,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,UAAU,GAAG,+DAAG,EAAC;;KAE7C,SAAS,SAAS,GAAG;MACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAC;MACnB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAC;MAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAC;MAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCC6BqE,SAAS;;oCACF,SAAS;;oCACV,SAAS;;;;;;;;;;;;;;;;0BAF9B,GAAG;;;;;;;;0BACH,UAAU;;;;;;;;0BACV,SAAS;;;;;;2CAFT,GAAG;kDACH,UAAU;iDACV,SAAS;;;;;;;;;;;;;;;;;;IAnChE,SAASC,OAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC9B,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAClD,CAAC;;IAED,SAASD,eAAa,CAAC,GAAG,EAAE;IAC7B,CAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;IACnC,CAAC;;IAED,SAAS,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE;IACzD,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAC;IAClB,CAAC,CAAC,GAAGC,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC3B,CAAC,CAAC,GAAGA,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC5B;IACA,CAAE,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAC;IACpD,CAAE,IAAI,MAAM,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,EAAC;IAC7D;IACC,CAAC,OAAO;IACR,EAAE,CAAC;IACJ,EAAG,CAAC,EAAED,eAAa,CAAC,MAAM,GAAG,GAAG,CAAC;IACjC,EAAG,CAAC,EAAEA,eAAa,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,EAAE;IACF,CAAC;;;KA1BD,IAAI,GAAG,EAAE,UAAU,EAAE,UAAS;KAC9B,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,GAAG,GAAG,iDAAG,EAAC;KACtC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,UAAU,GAAG,+DAAG,EAAC;KAC7C,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,SAAS,GAAG,6DAAG,EAAC;;KAyB5C,SAAS,SAAS,GAAG;MACpB,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,SAAS,CAAC,EAAC;MACnD,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oCCyCqE,SAAS;;oCACP,SAAS;;oCACV,SAAS;;;;;;;;;;;;;;;;0BAFzB,GAAG;;;;;;;0BACH,KAAK;;;;;;;0BACL,IAAI;;;;2CAFJ,GAAG;6CACH,KAAK;4CACL,IAAI;;;;;;;;;;;;;;;;;;IAvE3D,SAASC,OAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IAC9B,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAClD,CAAC;;IAED,SAASD,eAAa,CAAC,GAAG,EAAE;IAC7B,CAAE,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG;IACnC,CAAC;;IAED,SAAS,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE;IAC/C,CAAC,CAAC,GAAGC,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;IAC5B,CAAC,CAAC,GAAGA,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;IAC5B,CAAC,CAAC,GAAGA,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;;IAE5B,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI;IACvB,GAAI,CAAC,GAAG,CAAC;IACT,GAAI,CAAC,GAAG,CAAC;IACR,GAAG,CAAC,GAAG,CAAC,CAAC;IACV;IACC,CAAC,IAAI,KAAK,IAAI,CAAC;IACf,EAAE,CAAC,GAAG,CAAC,CAAC;IACR,MAAM,IAAI,IAAI,IAAI,CAAC;IACnB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC5B,MAAM,IAAI,IAAI,IAAI,CAAC;IACnB,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;IAC3B;IACC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;;IAE3B,CAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;;IAExB,CAAC,IAAI,CAAC,GAAG,CAAC;IACV,GAAG,CAAC,IAAI,GAAG,CAAC;IACb;IACA,CAAE,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;IACxB,CAAE,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzD;IACC,CAAC,OAAO;IACR,EAAE,CAAC;IACJ,EAAG,CAAC,EAAED,eAAa,CAAC,CAAC,GAAG,GAAG,CAAC;IAC5B,EAAG,CAAC,EAAEA,eAAa,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3B,EAAE;IACF,CAAC;;IAED,SAASE,UAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC7B,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAC;IAClB,CAAC,CAAC,GAAGD,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC3B,CAAC,CAAC,GAAGA,OAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,IAAG;IAC5B;IACA,CAAE,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAC;IACpD,CAAE,IAAI,MAAM,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,EAAC;IAC7D;IACC,CAAC,OAAO;IACR,EAAE,CAAC;IACJ,EAAG,CAAC,EAAED,eAAa,CAAC,MAAM,GAAG,GAAG,CAAC;IACjC,EAAG,CAAC,EAAEA,eAAa,CAAC,MAAM,GAAG,GAAG,CAAC;IAChC,EAAE;IACF,CAAC;;;KA9DD,IAAI,GAAG,EAAE,KAAK,EAAE,KAAI;KACpB,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,GAAG,GAAG,iDAAG,EAAC;KACtC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,KAAK,GAAG,qDAAG,EAAC;KACxC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,IAAI,GAAG,mDAAG,EAAC;;KA6DvC,SAAS,SAAS,GAAG;MACpB,IAAI,MAAM,GAAGE,UAAQ,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,EAAC;MACnD,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC;MACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cC3CI,IAAI,GAAG,KAAK;cAEP,IAAI,GAAG,KAAK;cAEZ,IAAI,GAAG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA5BtB,MAAW,IAAI,GAAG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CCgCY,aAAa;2CACzB,aAAa;;;;;;;;;;;;4CAKF,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE;;;;;;;yCAlBpC,GAAG;gDACA,UAAU;+CACX,SAAS;+CACJ,aAAa;+CACb,aAAa;sCACnB,KAAC,SAAS,GAAG,EAAE,IAAI,MAAM,GAAG,OAAO;;;;;8BAMvB,eAAe;;;mCAMiB,SAAS;;;;;;;;;;;;;;;;;;;;;;;yBAAxB,GAAG;;;;;;;;;4CALf,aAAa;;;;4CACzB,aAAa;;;0CAIW,GAAG;;;6CAChB,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE;0CAlBpC,GAAG;;;;iDACA,UAAU;;;;gDACX,SAAS;;;;gDACJ,aAAa;;;;gDACb,aAAa;;;;uCACnB,KAAC,SAAS,GAAG,EAAE,IAAI,MAAM,GAAG,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAjBrD,SAAS,eAAe,CAAC,CAAC,EAAE;IAC5B,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,qBAAqB,GAAE;IACvD,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAACF,eAAa,CAAC,CAAC,CAAC,OAAO,GAAG,KAAK,GAAG,GAAG,CAAC,EAAC;IACvD,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAACA,eAAa,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,CAAC,EAAC;IAC9D,CAAC;;;;;KAZD,IAAI,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAE,cAAa;KAC5D,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,GAAG,GAAG,iDAAG,EAAC;KACtC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,UAAU,GAAG,+DAAG,EAAC;KAC7C,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,SAAS,GAAG,6DAAG,EAAC;;KAE5C,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,aAAa,GAAG,qEAAG,EAAC;KAChD,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,uBAAI,aAAa,GAAG,qEAAG,EAAC;;KAQhD,SAAS,SAAS,GAAG;MACpB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAC;MACnB;;;;;;;;;;;;;;;;;;;;;;;;;ICrBF;;AAEA,kBAAe;IACf,EAAE,OAAO,EAAE;IACX,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,KAAK;IACT,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,KAAK;IACT,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,MAAM;IACV,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,MAAM;IACV,IAAI,SAAS;IACb,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,OAAO;IACX,IAAI,KAAK;IACT,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,SAAS;IACb,IAAI,KAAK;IACT,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,oBAAoB;IACxB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,mBAAmB;IACvB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,kBAAkB;IACtB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,iBAAiB;IACrB,IAAI,mBAAmB;IACvB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,kBAAkB;IACtB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,kBAAkB;IACtB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,oBAAoB;IACxB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,QAAQ;IACZ,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,oBAAoB;IACxB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,mBAAmB;IACvB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,kBAAkB;IACtB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,oBAAoB;IACxB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,MAAM;IACV,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,iBAAiB;IACrB,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,mBAAmB;IACvB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,mBAAmB;IACvB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,oBAAoB;IACxB,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,mBAAmB;IACvB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,KAAK;IACT,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,kBAAkB;IACtB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,KAAK;IACT,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,mBAAmB;IACvB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,KAAK;IACT,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,mBAAmB;IACvB,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,MAAM;IACV,IAAI,kBAAkB;IACtB,IAAI,kBAAkB;IACtB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,MAAM;IACV,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,mBAAmB;IACvB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,MAAM;IACV,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,mBAAmB;IACvB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,mBAAmB;IACvB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,MAAM;IACV,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,MAAM;IACV,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,OAAO;IACX,IAAI,UAAU;IACd,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,MAAM;IACV,IAAI,kBAAkB;IACtB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,KAAK;IACT,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,KAAK;IACT,IAAI,UAAU;IACd,IAAI,MAAM;IACV,IAAI,YAAY;IAChB,IAAI,OAAO;IACX,IAAI,KAAK;IACT,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,KAAK;IACT,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,iBAAiB;IACrB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,MAAM;IACV,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,KAAK;IACT,IAAI,OAAO;IACX,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,OAAO;IACX,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,SAAS;IACb,IAAI,kBAAkB;IACtB,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,UAAU;IACd,IAAI,MAAM;IACV,IAAI,mBAAmB;IACvB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,kBAAkB;IACtB,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,iBAAiB;IACrB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,OAAO;IACX,IAAI,OAAO;IACX,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,MAAM;IACV,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,MAAM;IACV,IAAI,iBAAiB;IACrB,IAAI,SAAS;IACb,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,MAAM;IACV,IAAI,iBAAiB;IACrB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,kBAAkB;IACtB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,iBAAiB;IACrB,IAAI,mBAAmB;IACvB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,QAAQ;IACZ,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,SAAS;IACb,IAAI,WAAW;IACf,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,SAAS;IACb,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,eAAe;IACnB,IAAI,gBAAgB;IACpB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,iBAAiB;IACrB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,QAAQ;IACZ,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,MAAM;IACV,IAAI,QAAQ;IACZ,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,kBAAkB;IACtB,IAAI,iBAAiB;IACrB,IAAI,eAAe;IACnB,IAAI,kBAAkB;IACtB,IAAI,gBAAgB;IACpB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,eAAe;IACnB,IAAI,kBAAkB;IACtB,IAAI,cAAc;IAClB,IAAI,UAAU;IACd,IAAI,YAAY;IAChB,IAAI,gBAAgB;IACpB,IAAI,gBAAgB;IACpB,IAAI,mBAAmB;IACvB,IAAI,iBAAiB;IACrB,IAAI,QAAQ;IACZ,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,eAAe;IACnB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,iBAAiB;IACrB,IAAI,cAAc;IAClB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,eAAe;IACnB,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,eAAe;IACnB,IAAI,WAAW;IACf,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,IAAI,UAAU;IACd,IAAI,cAAc;IAClB,IAAI,aAAa;IACjB,GAAG;IACH,EAAE,QAAQ,EAAE;IACZ,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAAM,SAAS;IACf,MAA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"}