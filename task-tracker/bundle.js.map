{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/utils.js","../src/store.js","../src/TaskTable.svelte","../src/ClientTable.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export function now(m) {\r\n  let now = new Date(Date.now())\r\n  let hrs = now.getHours(), mins = now.getMinutes()\r\n  if (m) {\r\n    hrs += (mins + m > 60) ? Math.floor((mins+m)/60) : 0\r\n    mins = (mins + m > 60) ? (m+mins)% 60 : m+mins\r\n  }\r\n  return `${hrs.toString().padStart(2,'0')}:${mins.toString().padStart(2, '0')}`\r\n}\r\n\r\nexport function addDateToTime(date, time) {\r\n  return new Date(date.getYear() +' '+date.getMonth()+' '+ date.getDate() +' '+ time)\r\n}\r\n\r\nexport function formatTime(date, timeStr) {\r\n  let timeDate = addDateToTime(date, timeStr)\r\n  return `${(timeDate.getHours() <= 12) ? timeDate.getHours() : timeDate.getHours() - 12 }:${timeDate.getMinutes().toString().padStart(2, '0')} ${(timeDate.getHours() < 12) ? 'am' : 'pm'}`\r\n}\r\n\r\nexport function calcDuration(date, start, end) {\r\n  const dayInMS = 1000*60*60*24\r\n\r\n  let startT = addDateToTime(date, start)\r\n  let endT = addDateToTime(date, end)\r\n  let dur = endT - startT\r\n  return (dur > 0) ? dur : dur+dayInMS\r\n}\r\n\r\nexport function MStoDecimalHrs(ms) {\r\n  return (ms/1000/60/60).toFixed(2)\r\n}\r\n\r\nexport function formatDuration(dur) {\r\n  return `${Math.floor(dur/1000/60/60)}h ${dur/1000/60%60}m`\r\n}\r\n\r\nexport const calcFormattedDuration = (date, start, end) => formatDuration(calcDuration(date, start, end))\r\n","import { writable, derived, get } from 'svelte/store'\r\nimport { calcDuration, formatDuration } from './utils.js'\r\n\r\nconst weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\nlet today = new Date(Date.now())\r\nexport const date = writable(today)\r\n\r\nexport const weekdayString = derived(date, $date => weekdays[$date.getDay()])\r\nexport const dateString = derived(date, $date => `${$date.getMonth()+1}/${$date.getDate()}`)\r\nexport const wkDateString = derived([weekdayString, dateString], ([$weekdayString, $dateString]) => $weekdayString +' '+ $dateString)\r\n\r\nexport const storageString = derived(date, $date => `task-tracker-${$date.getMonth()+1}-${$date.getDate()}`)\r\n\r\nexport const initialTask = (storageString) => {\r\n  return {\r\n    dateStr: storageString,\r\n    taskList: [\r\n      {\r\n        client: 'eko',\r\n        task: 'Make a spreadsheet',\r\n        startTime: '13:04',\tendTime: '13:34'\r\n      }\r\n    ]\r\n  }\r\n}\r\n\r\nexport const getTasks = (storageString) => {\r\n  return JSON.parse(localStorage.getItem(storageString)) || initialTask(storageString)\r\n}\r\n\r\nexport const tasks = writable(getTasks(get(storageString)));\r\n\r\nexport const tasksByClient = derived(tasks, $tasks => \r\n  $tasks.taskList.reduce((arr, task, i) => {\r\n  let currClients = arr.map(t => t.client.toLowerCase().trim())\r\n  let indexOfClient = currClients.indexOf(task.client.toLowerCase().trim())\r\n  if (indexOfClient >= 0) {\r\n      arr[indexOfClient].tasks.push({\r\n        task: task.task,\r\n        startTime: task.startTime,\r\n        endTime: task.endTime\r\n      })\r\n      return arr\r\n  }\r\n  else {\r\n    return [\r\n      ...arr,\r\n      {\r\n        client: task.client,\r\n        tasks: [\r\n          {\r\n            task: task.task,\r\n            startTime: task.startTime,\r\n            endTime: task.endTime\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}, []))\r\n\r\nexport const totalDuration = derived([date, tasksByClient], ([$date,$tasksByClient]) => $tasksByClient.reduce((acc,client) => acc+client.tasks.reduce((tAcc,t) => tAcc+calcDuration($date, t.startTime, t.endTime), 0), 0))\r\nexport const formattedTotalDuration = derived(totalDuration, $totalDuration => formatDuration($totalDuration))\r\n\r\n\r\n\r\n","<script>\n\timport { date, tasks, storageString } from './store.js'\n\timport { now, formatTime, calcFormattedDuration } from './utils.js'\n\tlet newTask = createNewTask()\n\n\tfunction createNewTask() {\n\t\treturn {\n\t\t\tclient: '',\n\t\t\ttask: '',\n\t\t\tstartTime: now(),\n\t\t\tendTime: now(15)\n\t\t}\n\t}\n\n\tfunction addTask() {\n\t\ttasks.set({ dateStr: $tasks.dateStr, taskList: [...$tasks.taskList, newTask] })\n\t\tnewTask = createNewTask()\n\t\tdocument.getElementById('input_client').focus()\n\t}\n\t\n\tfunction handleFormKeyUp(e) {\n\t\tif (e.key === 'Enter') {\n\t\t\taddTask()\n\t\t}\n\t}\n\t\n\tfunction delTask(e) {\n\t\tlet tasksCopy = { dateStr: $tasks.dateStr, taskList: [...$tasks.taskList]}\n\t\tlet i = parseInt(e.target.dataset.id)\n\t\ttasks.set({ dateStr: tasksCopy.dateStr, taskList: [...tasksCopy.taskList.slice(0, i), ...tasksCopy.taskList.slice(i+1)] })\n\t}\n</script>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th class='l'>Client</th>\n\t\t\t<th class=\"l\">Task</th>\n\t\t\t<th>Start</th>\n\t\t\t<th>End</th>\n\t\t\t<th>Duration</th>\n\t\t</tr>\n\t\t{#each $tasks.taskList as task, i (task.task + task.startTime)}\n\t\t<tr>\n\t\t\t<td>{ task.client }</td>\n\t\t\t<td>{ task.task }</td>\n\t\t\t<td class='c'>{ formatTime($date, task.startTime) }</td>\n\t\t\t<td class='c'>{ formatTime($date, task.endTime) }</td>\n\t\t\t<td class='c'>{ calcFormattedDuration($date, task.startTime, task.endTime) }</td>\n\t\t\t\t\t\t<button class=\"btn_del\" data-id={i} on:click={delTask}>🗑</button>\n\t\t</tr>\n\t\t{/each}\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<input id='input_client' type='text' bind:value={newTask.client} placeholder=\"Client, LLC\"\n\t\t\t\t\t\t\t on:keyup={handleFormKeyUp} />\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input class='input_task-name' type='text'\n\t\t\t\t\t\t\t bind:value={newTask.task} placeholder=\"Enter a new task\"\n\t\t\t\t\t\t\t on:keyup={handleFormKeyUp} />\n\t\t\t</td>\n\t\t\t<td class='c'>\n\t\t\t\t<input type='time' bind:value={newTask.startTime}\n\t\t\t\t\t\t\t on:keyup={handleFormKeyUp} />\n\t\t\t</td>\n\t\t\t<td class='c'>\n\t\t\t\t<input type='time' bind:value={newTask.endTime}\n\t\t\t\t\t\t\t on:keyup={handleFormKeyUp} />\n\t\t\t</td>\n\t\t\t<td class='c'>\n\t\t\t\t<button class=\"btn_add\" on:click={addTask}>Add Task</button>\n\t\t\t</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<style>\n\ttable {\n\t\tmargin: 3vh auto;\n\t}\n\t\n\tth {\n\t\tfont-size: calc(.3em + 2.2vmin);\n\t\tpadding-bottom: .5em;\n\t\tborder-bottom: solid 1px hsl(190, 70%, 70%);\n\t}\n\n\tth, td {\n\t\tmax-width: 25vw;\n\t}\n\t\n\ttd {\n\t\tfont-size: calc(.25em + 1.25vmin);\n\t\tpadding: .5em 0;\n\t}\n\t\n\t.l {\n\t\ttext-align: left;\n\t}\n\t\n\t.c {\n\t\ttext-align: center;\n\t}\n\t\n\t.btn_del {\n\t\tposition: relative;;\n\t\tbackground: transparent;\n\t\tborder: solid 2px lightgray;\n\t\tborder-radius: .3em;\n\t\tpadding: .2em .3em;\n\t\tmargin: 0;\n\t\ttop: 0;\n\t\ttransition: all .08s ease-in-out;\n\t\topacity: 0;\n\t}\n\ttr:hover .btn_del {\n\t\topacity: 1;\n\t}\n\t.btn_del:hover {\n\t\tbackground: hsl(20deg, 80%, 80%);\n\t}\n\t\n\ttr input, tr .btn_add {\n\t\tmargin: 0;\n\t\tpadding: .25em .5em;\n\t\ttransition: background .08s ease-in-out;\n  }\n\ttr input {\n\t\tdisplay: inline-block;\n\t\tmax-width: 100%;\n\t\tborder: none;\n\t\tborder-bottom: solid 3px hsl(190deg, 70%, 85%);\n\t\tborder-radius: 0 0 .25em .25em;\n\t\ttransition: all .09s ease-in-out;\n\t}\n\ttr input:not([type='time']) {\n\t\tpadding: calc(.25em + 2px) .5em;\n\t}\n\ttr .btn_add {\n\t\twidth: 100%;\n\t}\n\ttr .btn_add:hover,\n\ttr .btn_add:focus {\n\t\toutline: none;\n\t\tbackground: hsl(190deg, 70%, 90%);\n\t\tborder-radius: 0 .5em 0 .5em;\t\n\t}\n\ttr input:hover,\n\ttr input:focus {\n\t\toutline: none;\n\t\tborder-bottom: solid 3px hsl(190deg, 70%, 75%);\n\t\tborder-radius: 0 0 .25em .75em;\n\t}\n\t\n\t.c input {\n\t\tmargin: 0 auto;\n\t}\n\t\n\t.input_task-name {\n\t\twidth: 50ch;\n\t\tmax-width: 100%;\n\t}\n\n\t@media(max-width:570px) {\n\t\t.btn_del {\n\t\t\ttransform: translate(-150%);\n\t\t\tz-index: 5;\n\t\t\tbackground: hsl(20deg, 80%, 80%);\n\t\t}\n\t}\n</style>","<script>\r\n  // import DonutChart from './components/DonutChart.svelte'\r\n  import { date, dateString, tasks, tasksByClient, totalDuration, formattedTotalDuration } from './store.js'\r\n  import { calcDuration, MStoDecimalHrs, formatDuration }\t from './utils'\r\n  $: hours = $totalDuration/1000/60/60\r\n\r\n  function copyTasks(tasks) {\r\n    let taskStr = tasks.reduce((acc, task, i, arr) => acc+`${task.task} (${MStoDecimalHrs(calcDuration($date,task.startTime,task.endTime))}) ${(i<arr.length-1) ? '// ' : ''}`, `${$dateString} - `)\r\n    const clipboard = document.createElement('input')\r\n    clipboard.id= 'clipboard'\r\n    clipboard.value = taskStr\r\n    document.body.appendChild(clipboard)\r\n    clipboard.select()\r\n    document.execCommand('copy')\r\n    clipboard.remove()\r\n  }\r\n</script>\r\n\r\n<section class='main-content'>\r\n  <span class=\"big-span\">You worked { $formattedTotalDuration } today{\r\n    (hours > 8) ? (hours < 10) ? '!' : '! GO HOME!' : '.'\r\n  }</span>\r\n  <!-- <DonutChart /> -->\r\n  <h3>Tasks by Client</h3>\r\n  {#each $tasksByClient as cat, i}\r\n  <h4 tabindex=0 on:click={() => copyTasks(cat.tasks)}>{cat.client}</h4>\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <th>Task</th>\r\n        <th>Time</th>\r\n      </tr>\r\n      {#each cat.tasks as task}\r\n      <tr>\r\n        <td>{task.task}</td>\r\n        <td>{ formatDuration(calcDuration($date, task.startTime, task.endTime)) }</td>\r\n      </tr>\r\n      {/each}\r\n      <tr>\r\n        <th>Total</th>\r\n        <td>{ formatDuration(cat.tasks.reduce((acc, t) => acc+calcDuration($date, t.startTime, t.endTime), 0)) }</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  {/each}\r\n</section>\r\n\r\n<style>\r\n  .main-content {\r\n    margin: 0 auto;\r\n    margin-bottom: 10vh;\r\n    max-width: 700px;\r\n    min-width: 400px;\r\n    box-sizing: border-box;\r\n    padding: 2vh 3vw;\r\n    border-radius: 2vmin;\r\n    background: inherit;\r\n    box-shadow: 0 .6vh 1.1vh rgba(0,0,0,0.2),\r\n                0 1.2vh 1.9vh rgba(0,0,0,0.08);\r\n  }\r\n  .big-span {\r\n    display: block;\r\n    margin: 0 auto .75em auto;\r\n    font-size: 2em;\r\n    text-align: center;\r\n    color: hsl(190deg, 30%, 50%);\r\n  }\r\n  h4 {\r\n    font-size: 1.5em;\r\n    font-weight: normal;\r\n    margin: 0 auto;\r\n    margin-bottom: .5em;\r\n    padding: .25em 0 .25em 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    position: relative;\r\n    background: transparent;\r\n    transition: all .1s ease-in-out;\r\n  }\r\n  h4:hover {\r\n    background: hsl(190deg, 50%, 40%);\r\n    cursor: pointer;\r\n    color: white;\r\n  }\r\n  h4::after {\r\n    position: absolute;\r\n    content: 'click to copy tasks to clipboard!';\r\n    font-size: .8rem;\r\n    color: white;\r\n    font-weight: 400;\r\n    text-align: right;\r\n    opacity: 0;\r\n    right: 2ch;\r\n    top: 50%;\r\n    transform: translate(0, 0);\r\n    transition: all .11s .05s ease-in-out;\r\n  }\r\n  h4:hover::after {\r\n    opacity: 1;\r\n    transform: translate(0,-50%);\r\n  }\r\n\r\n  table {\r\n    margin: 0 auto 1em auto;\r\n    width: 100%;\r\n    border: solid 1px hsl(190deg, 95%, 40%);\r\n    border-collapse: collapse;\r\n  }\r\n  tr:not(:last-child) {\r\n    border-bottom: solid 1px hsl(190deg, 20%, 70%);\r\n  }\r\n\r\n  th {\r\n    color: hsl(190deg, 80%, 40%);\r\n    text-align: left;\r\n    font-weight: normal;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  td, th {\r\n    padding: .5em .75em;\r\n  }\r\n</style>","<script>\n\timport TaskTable from './TaskTable.svelte'\n\timport ClientTable from './ClientTable.svelte'\n\timport { initialTask, date, tasks, getTasks, wkDateString, storageString } from './store.js'\t\n\tlet tasksJSONStr = '';\n\n\tfunction clearTasks() { tasks.set(initialTask($storageString)) }\n\n\t// read from memory if the date changes\n\t$: {\n\t\ttasks.set(getTasks($storageString))\n\t}\n\n\t// write to memory if only the tasks change\n\t$: if ($tasks.dateStr === $storageString) {\n\t\tlocalStorage.setItem($storageString, JSON.stringify($tasks))\n\t}\n\n\tconst dayInMS = 1000*60*60*24\n\tfunction changeDate(change) {\n\t\tdate.update(date => { return new Date(date.getTime() + change*dayInMS) } )\n\t}\n</script>\n\n<style>\n\theader {\n\t\twidth: 100vw;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\tpadding: 1vh 5vw;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-bottom: solid 1px gray;\n\t}\n\n\theader h1 {\n\t\tmargin: 0;\n\t}\n\t\n\theader button {\n\t\tmargin: 0;\n\t\tbackground: transparent;\n\t\ttransition: background .08s ease-in-out;\n\t}\n\n\t.btn_clear-task {\n\t\tfont-size: calc(.2em + 1.5vmin);\n\t\tpadding: .5em 1.5vmin;\n\t\tborder: solid;\n\t\talign-self: center;\n\t}\n\t\n\theader button:hover,\n\theader button:focus {\n\t\tbackground: hsl(20deg, 80%, 80%);\n\t}\n\t\n\t.date-container {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t.date-container h2 {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tdisplay: inline-block;\n\t\tcolor: gray;\n\t}\n\n\t.date-container button {\n\t\tborder: none;\n\t\tpadding: .25em 1em;\n\t}\n\n\t@media(orientation:portrait) {\n\t\t.btn_clear-task {\n\t\t\tposition: absolute;\n\t\t\tright: 10vw;\n\t\t\ttop: 50%;\n\t\t\ttransform: translate(0, -50%);\n\t\t}\n\n\t\theader {\n\t\t\tflex-direction: column;\n\t\t\talign-items: flex-start;\n\t\t}\n\n\t}\n</style>\n\n<header>\n\t<h1>Task Tracker</h1>\n\t<div class=\"date-container\">\n\t\t<button on:click={() => changeDate(-1)}>⬅</button>\n\t\t<h2>{ $wkDateString }</h2>\n\t\t<button on:click={() => changeDate(1)}>➡</button>\n\t</div>\n\t<button class=\"btn_clear-task\" on:click={clearTasks}>Clear Tasks</button>\n</header>\n<main>\n\t<TaskTable />\n\t<ClientTable />\n</main>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callback","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_data","set_input_value","input","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","shift","update","pop","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","destroy_block","lookup","key","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","now","Date","hrs","getHours","mins","getMinutes","Math","floor","toString","padStart","addDateToTime","date","time","getYear","getMonth","getDate","formatTime","timeStr","timeDate","calcDuration","end","startT","dur","formatDuration","calcFormattedDuration","weekdays","weekdayString","$date","getDay","dateString","wkDateString","$weekdayString","$dateString","storageString","initialTask","dateStr","taskList","client","task","startTime","endTime","getTasks","JSON","parse","localStorage","getItem","tasks","_","get","tasksByClient","$tasks","reduce","arr","indexOfClient","t","toLowerCase","trim","totalDuration","$tasksByClient","acc","tAcc","formattedTotalDuration","$totalDuration","delTask","handleFormKeyUp","addTask","newTask","old_blocks","changed","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","createNewTask","getElementById","focus","e","tasksCopy","parseInt","dataset","id","slice","cat","click_handler","hours","$formattedTotalDuration","copyTasks","taskStr","ms","toFixed","MStoDecimalHrs","clipboard","body","select","execCommand","remove","$wkDateString","clearTasks","dayInMS","changeDate","change","getTime","$storageString","setItem","stringify"],"mappings":"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"}